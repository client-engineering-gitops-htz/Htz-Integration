{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX, InputGroup, Overlay } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\n\nvar Omnibar =\n/** @class */\nfunction (_super) {\n  __extends(Omnibar, _super);\n\n  function Omnibar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.TypedQueryList = QueryList.ofType();\n\n    _this.renderQueryList = function (listProps) {\n      var _a = _this.props,\n          _b = _a.inputProps,\n          inputProps = _b === void 0 ? {} : _b,\n          isOpen = _a.isOpen,\n          _c = _a.overlayProps,\n          overlayProps = _c === void 0 ? {} : _c;\n      var handleKeyDown = listProps.handleKeyDown,\n          handleKeyUp = listProps.handleKeyUp;\n      var handlers = isOpen ? {\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp\n      } : {};\n      return React.createElement(Overlay, __assign({\n        hasBackdrop: true\n      }, overlayProps, {\n        isOpen: isOpen,\n        className: classNames(Classes.OMNIBAR_OVERLAY, overlayProps.className),\n        onClose: _this.handleOverlayClose\n      }), React.createElement(\"div\", __assign({\n        className: classNames(Classes.OMNIBAR, listProps.className)\n      }, handlers), React.createElement(InputGroup, __assign({\n        autoFocus: true,\n        large: true,\n        leftIcon: \"search\",\n        placeholder: \"Search...\"\n      }, inputProps, {\n        onChange: listProps.handleQueryChange,\n        value: listProps.query\n      })), listProps.itemList));\n    };\n\n    _this.handleOverlayClose = function (event) {\n      var _a, _b, _c, _d;\n\n      (_b = (_a = _this.props.overlayProps) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n      (_d = (_c = _this.props).onClose) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    };\n\n    return _this;\n  }\n\n  Omnibar.ofType = function () {\n    return Omnibar;\n  };\n\n  Omnibar.prototype.render = function () {\n    // omit props specific to this component, spread the rest.\n    var _a = this.props,\n        isOpen = _a.isOpen,\n        inputProps = _a.inputProps,\n        overlayProps = _a.overlayProps,\n        restProps = __rest(_a, [\"isOpen\", \"inputProps\", \"overlayProps\"]);\n\n    var initialContent = \"initialContent\" in this.props ? this.props.initialContent : null;\n    return React.createElement(this.TypedQueryList, __assign({}, restProps, {\n      initialContent: initialContent,\n      renderer: this.renderQueryList\n    }));\n  };\n\n  Omnibar.displayName = DISPLAYNAME_PREFIX + \".Omnibar\";\n  return Omnibar;\n}(React.PureComponent);\n\nexport { Omnibar };","map":{"version":3,"sources":["../../../../src/components/omnibar/omnibar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX, InputGroup, Overlay } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\nvar Omnibar = /** @class */ (function (_super) {\n    __extends(Omnibar, _super);\n    function Omnibar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.TypedQueryList = QueryList.ofType();\n        _this.renderQueryList = function (listProps) {\n            var _a = _this.props, _b = _a.inputProps, inputProps = _b === void 0 ? {} : _b, isOpen = _a.isOpen, _c = _a.overlayProps, overlayProps = _c === void 0 ? {} : _c;\n            var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;\n            var handlers = isOpen ? { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp } : {};\n            return (React.createElement(Overlay, __assign({ hasBackdrop: true }, overlayProps, { isOpen: isOpen, className: classNames(Classes.OMNIBAR_OVERLAY, overlayProps.className), onClose: _this.handleOverlayClose }),\n                React.createElement(\"div\", __assign({ className: classNames(Classes.OMNIBAR, listProps.className) }, handlers),\n                    React.createElement(InputGroup, __assign({ autoFocus: true, large: true, leftIcon: \"search\", placeholder: \"Search...\" }, inputProps, { onChange: listProps.handleQueryChange, value: listProps.query })),\n                    listProps.itemList)));\n        };\n        _this.handleOverlayClose = function (event) {\n            var _a, _b, _c, _d;\n            (_b = (_a = _this.props.overlayProps) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n            (_d = (_c = _this.props).onClose) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n        };\n        return _this;\n    }\n    Omnibar.ofType = function () {\n        return Omnibar;\n    };\n    Omnibar.prototype.render = function () {\n        // omit props specific to this component, spread the rest.\n        var _a = this.props, isOpen = _a.isOpen, inputProps = _a.inputProps, overlayProps = _a.overlayProps, restProps = __rest(_a, [\"isOpen\", \"inputProps\", \"overlayProps\"]);\n        var initialContent = \"initialContent\" in this.props ? this.props.initialContent : null;\n        return React.createElement(this.TypedQueryList, __assign({}, restProps, { initialContent: initialContent, renderer: this.renderQueryList }));\n    };\n    Omnibar.displayName = DISPLAYNAME_PREFIX + \".Omnibar\";\n    return Omnibar;\n}(React.PureComponent));\nexport { Omnibar };\n//# sourceMappingURL=omnibar.js.map"]},"metadata":{},"sourceType":"module"}