{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\n\nvar noOpDispatch = function () {\n  return null;\n};\n\nexport var Tooltip2Context = React.createContext([{}, noOpDispatch]);\n\nvar tooltip2Reducer = function (state, action) {\n  switch (action.type) {\n    case \"FORCE_DISABLED_STATE\":\n      return {\n        forceDisabled: true\n      };\n\n    case \"RESET_DISABLED_STATE\":\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport var Tooltip2Provider = function (_a) {\n  var children = _a.children,\n      forceDisable = _a.forceDisable;\n\n  var _b = React.useReducer(tooltip2Reducer, {}),\n      state = _b[0],\n      dispatch = _b[1];\n\n  React.useEffect(function () {\n    if (forceDisable) {\n      dispatch({\n        type: \"FORCE_DISABLED_STATE\"\n      });\n    } else {\n      dispatch({\n        type: \"RESET_DISABLED_STATE\"\n      });\n    }\n  }, [forceDisable]);\n  return React.createElement(Tooltip2Context.Provider, {\n    value: [state, dispatch]\n  }, typeof children === \"function\" ? children(state) : children);\n};","map":{"version":3,"sources":["../../src/tooltip2Context.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;AAOA,IAAM,YAAY,GAAmC,YAAA;AAAM,SAAA,IAAA;AAAI,CAA/D;;AAEA,OAAO,IAAM,eAAe,GAAG,KAAK,CAAC,aAAN,CAA4E,CACvG,EADuG,EAEvG,YAFuG,CAA5E,CAAxB;;AAKP,IAAM,eAAe,GAAG,UAAC,KAAD,EAA8B,MAA9B,EAAoD;AACxE,UAAQ,MAAM,CAAC,IAAf;AACI,SAAK,sBAAL;AACI,aAAO;AAAE,QAAA,aAAa,EAAE;AAAjB,OAAP;;AACJ,SAAK,sBAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAO,KAAP;AANR;AAQH,CATD;;AAgBA,OAAO,IAAM,gBAAgB,GAAG,UAAC,EAAD,EAAkD;MAA/C,QAAQ,GAAA,EAAA,CAAA,Q;MAAE,YAAY,GAAA,EAAA,CAAA,Y;;AAC/C,MAAA,EAAA,GAAoB,KAAK,CAAC,UAAN,CAAiB,eAAjB,EAAkC,EAAlC,CAApB;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AAEN,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACZ,QAAI,YAAJ,EAAkB;AACd,MAAA,QAAQ,CAAC;AAAE,QAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAFD,MAEO;AACH,MAAA,QAAQ,CAAC;AAAE,QAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH;AACJ,GAND,EAMG,CAAC,YAAD,CANH;AAQA,SACI,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB;AAAC,IAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,QAAR;AAAR,GAAzB,EACK,OAAO,QAAP,KAAoB,UAApB,GAAiC,QAAQ,CAAC,KAAD,CAAzC,GAAmD,QADxD,CADJ;AAKH,CAhBM","sourceRoot":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\nvar noOpDispatch = function () { return null; };\nexport var Tooltip2Context = React.createContext([\n    {},\n    noOpDispatch,\n]);\nvar tooltip2Reducer = function (state, action) {\n    switch (action.type) {\n        case \"FORCE_DISABLED_STATE\":\n            return { forceDisabled: true };\n        case \"RESET_DISABLED_STATE\":\n            return {};\n        default:\n            return state;\n    }\n};\nexport var Tooltip2Provider = function (_a) {\n    var children = _a.children, forceDisable = _a.forceDisable;\n    var _b = React.useReducer(tooltip2Reducer, {}), state = _b[0], dispatch = _b[1];\n    React.useEffect(function () {\n        if (forceDisable) {\n            dispatch({ type: \"FORCE_DISABLED_STATE\" });\n        }\n        else {\n            dispatch({ type: \"RESET_DISABLED_STATE\" });\n        }\n    }, [forceDisable]);\n    return (React.createElement(Tooltip2Context.Provider, { value: [state, dispatch] }, typeof children === \"function\" ? children(state) : children));\n};\n//# sourceMappingURL=tooltip2Context.js.map"]},"metadata":{},"sourceType":"module"}