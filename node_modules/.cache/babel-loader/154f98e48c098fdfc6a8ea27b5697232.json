{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes as CoreClasses, DISPLAYNAME_PREFIX, Keys, Popover, PopoverInteractionKind, Position, TagInput, refHandler, setRef } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\n\nvar MultiSelect =\n/** @class */\nfunction (_super) {\n  __extends(MultiSelect, _super);\n\n  function MultiSelect() {\n    var _a;\n\n    var _this = _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isOpen: _this.props.popoverProps && _this.props.popoverProps.isOpen || false\n    };\n    _this.TypedQueryList = QueryList.ofType();\n    _this.input = null;\n    _this.queryList = null;\n    _this.refHandlers = {\n      input: refHandler(_this, \"input\", (_a = _this.props.tagInputProps) === null || _a === void 0 ? void 0 : _a.inputRef),\n      queryList: function (ref) {\n        return _this.queryList = ref;\n      }\n    };\n\n    _this.renderQueryList = function (listProps) {\n      var _a;\n\n      var _b = _this.props,\n          fill = _b.fill,\n          _c = _b.tagInputProps,\n          tagInputProps = _c === void 0 ? {} : _c,\n          _d = _b.popoverProps,\n          popoverProps = _d === void 0 ? {} : _d,\n          _e = _b.selectedItems,\n          selectedItems = _e === void 0 ? [] : _e,\n          placeholder = _b.placeholder;\n      var handlePaste = listProps.handlePaste,\n          handleKeyDown = listProps.handleKeyDown,\n          handleKeyUp = listProps.handleKeyUp;\n\n      if (fill) {\n        popoverProps.fill = true;\n        tagInputProps.fill = true;\n      } // add our own inputProps.className so that we can reference it in event handlers\n\n\n      var inputProps = __assign(__assign({}, tagInputProps.inputProps), {\n        className: classNames((_a = tagInputProps.inputProps) === null || _a === void 0 ? void 0 : _a.className, Classes.MULTISELECT_TAG_INPUT_INPUT)\n      });\n\n      var handleTagInputAdd = function (values, method) {\n        if (method === \"paste\") {\n          handlePaste(values);\n        }\n      };\n\n      return (\n        /* eslint-disable-next-line deprecation/deprecation */\n        React.createElement(Popover, __assign({\n          autoFocus: false,\n          canEscapeKeyClose: true,\n          enforceFocus: false,\n          isOpen: _this.state.isOpen,\n          position: Position.BOTTOM_LEFT\n        }, popoverProps, {\n          className: classNames(listProps.className, popoverProps.className),\n          interactionKind: PopoverInteractionKind.CLICK,\n          onInteraction: _this.handlePopoverInteraction,\n          popoverClassName: classNames(Classes.MULTISELECT_POPOVER, popoverProps.popoverClassName),\n          onOpened: _this.handlePopoverOpened\n        }), React.createElement(\"div\", {\n          onKeyDown: _this.getTagInputKeyDownHandler(handleKeyDown),\n          onKeyUp: _this.getTagInputKeyUpHandler(handleKeyUp)\n        }, React.createElement(TagInput, __assign({\n          placeholder: placeholder\n        }, tagInputProps, {\n          className: classNames(Classes.MULTISELECT, tagInputProps.className),\n          inputRef: _this.refHandlers.input,\n          inputProps: inputProps,\n          inputValue: listProps.query,\n\n          /* eslint-disable-next-line react/jsx-no-bind */\n          onAdd: handleTagInputAdd,\n          onInputChange: listProps.handleQueryChange,\n          onRemove: _this.handleTagRemove,\n          values: selectedItems.map(_this.props.tagRenderer)\n        }))), React.createElement(\"div\", {\n          onKeyDown: handleKeyDown,\n          onKeyUp: handleKeyUp\n        }, listProps.itemList))\n      );\n    };\n\n    _this.handleItemSelect = function (item, evt) {\n      var _a, _b;\n\n      if (_this.input != null) {\n        _this.input.focus();\n      }\n\n      (_b = (_a = _this.props).onItemSelect) === null || _b === void 0 ? void 0 : _b.call(_a, item, evt);\n    };\n\n    _this.handleQueryChange = function (query, evt) {\n      var _a, _b;\n\n      _this.setState({\n        isOpen: query.length > 0 || !_this.props.openOnKeyDown\n      });\n\n      (_b = (_a = _this.props).onQueryChange) === null || _b === void 0 ? void 0 : _b.call(_a, query, evt);\n    }; // Popover interaction kind is CLICK, so this only handles click events.\n    // Note that we defer to the next animation frame in order to get the latest document.activeElement\n\n\n    _this.handlePopoverInteraction = function (nextOpenState, evt) {\n      return _this.requestAnimationFrame(function () {\n        var _a, _b;\n\n        var isInputFocused = _this.input === document.activeElement;\n\n        if (_this.input != null && !isInputFocused) {\n          // input is no longer focused, we should close the popover\n          _this.setState({\n            isOpen: false\n          });\n        } else if (!_this.props.openOnKeyDown) {\n          // we should open immediately on click focus events\n          _this.setState({\n            isOpen: true\n          });\n        }\n\n        (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onInteraction) === null || _b === void 0 ? void 0 : _b.call(_a, nextOpenState, evt);\n      });\n    };\n\n    _this.handlePopoverOpened = function (node) {\n      var _a, _b;\n\n      if (_this.queryList != null) {\n        // scroll active item into view after popover transition completes and all dimensions are stable.\n        _this.queryList.scrollActiveItemIntoView();\n      }\n\n      (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onOpened) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    };\n\n    _this.handleTagRemove = function (tag, index) {\n      var _a;\n\n      var _b = _this.props,\n          _c = _b.selectedItems,\n          selectedItems = _c === void 0 ? [] : _c,\n          onRemove = _b.onRemove,\n          tagInputProps = _b.tagInputProps;\n      onRemove === null || onRemove === void 0 ? void 0 : onRemove(selectedItems[index], index);\n      (_a = tagInputProps === null || tagInputProps === void 0 ? void 0 : tagInputProps.onRemove) === null || _a === void 0 ? void 0 : _a.call(tagInputProps, tag, index);\n    };\n\n    _this.getTagInputKeyDownHandler = function (handleQueryListKeyDown) {\n      return function (e) {\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        // eslint-disable-next-line deprecation/deprecation\n        var which = e.which;\n\n        if (which === Keys.ESCAPE || which === Keys.TAB) {\n          // By default the escape key will not trigger a blur on the\n          // input element. It must be done explicitly.\n          if (_this.input != null) {\n            _this.input.blur();\n          }\n\n          _this.setState({\n            isOpen: false\n          });\n        } else if (!(which === Keys.BACKSPACE || which === Keys.ARROW_LEFT || which === Keys.ARROW_RIGHT)) {\n          _this.setState({\n            isOpen: true\n          });\n        }\n\n        var isTargetingTagRemoveButton = e.target.closest(\".\" + CoreClasses.TAG_REMOVE) != null;\n\n        if (_this.state.isOpen && !isTargetingTagRemoveButton) {\n          handleQueryListKeyDown === null || handleQueryListKeyDown === void 0 ? void 0 : handleQueryListKeyDown(e);\n        }\n      };\n    };\n\n    _this.getTagInputKeyUpHandler = function (handleQueryListKeyUp) {\n      return function (e) {\n        var isTargetingInput = e.target.classList.contains(Classes.MULTISELECT_TAG_INPUT_INPUT); // only handle events when the focus is on the actual <input> inside the TagInput, as that's\n        // what QueryList is designed to do\n\n        if (_this.state.isOpen && isTargetingInput) {\n          handleQueryListKeyUp === null || handleQueryListKeyUp === void 0 ? void 0 : handleQueryListKeyUp(e);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  MultiSelect.ofType = function () {\n    return MultiSelect;\n  };\n\n  MultiSelect.prototype.componentDidUpdate = function (prevProps) {\n    var _a, _b, _c, _d, _e;\n\n    if (((_a = prevProps.tagInputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.tagInputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {\n      setRef((_c = prevProps.tagInputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);\n      this.refHandlers.input = refHandler(this, \"input\", (_d = this.props.tagInputProps) === null || _d === void 0 ? void 0 : _d.inputRef);\n      setRef((_e = this.props.tagInputProps) === null || _e === void 0 ? void 0 : _e.inputRef, this.input);\n    }\n  };\n\n  MultiSelect.prototype.render = function () {\n    // omit props specific to this component, spread the rest.\n    var _a = this.props,\n        openOnKeyDown = _a.openOnKeyDown,\n        popoverProps = _a.popoverProps,\n        tagInputProps = _a.tagInputProps,\n        restProps = __rest(_a, [\"openOnKeyDown\", \"popoverProps\", \"tagInputProps\"]);\n\n    return React.createElement(this.TypedQueryList, __assign({}, restProps, {\n      onItemSelect: this.handleItemSelect,\n      onQueryChange: this.handleQueryChange,\n      ref: this.refHandlers.queryList,\n      renderer: this.renderQueryList\n    }));\n  };\n\n  MultiSelect.displayName = DISPLAYNAME_PREFIX + \".MultiSelect\";\n  MultiSelect.defaultProps = {\n    fill: false,\n    placeholder: \"Search...\"\n  };\n  return MultiSelect;\n}(AbstractPureComponent2);\n\nexport { MultiSelect };","map":{"version":3,"sources":["../../../../src/components/select/multiSelect.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes as CoreClasses, DISPLAYNAME_PREFIX, Keys, Popover, PopoverInteractionKind, Position, TagInput, refHandler, setRef, } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\nvar MultiSelect = /** @class */ (function (_super) {\n    __extends(MultiSelect, _super);\n    function MultiSelect() {\n        var _a;\n        var _this = _super.apply(this, arguments) || this;\n        _this.state = {\n            isOpen: (_this.props.popoverProps && _this.props.popoverProps.isOpen) || false,\n        };\n        _this.TypedQueryList = QueryList.ofType();\n        _this.input = null;\n        _this.queryList = null;\n        _this.refHandlers = {\n            input: refHandler(_this, \"input\", (_a = _this.props.tagInputProps) === null || _a === void 0 ? void 0 : _a.inputRef),\n            queryList: function (ref) { return (_this.queryList = ref); },\n        };\n        _this.renderQueryList = function (listProps) {\n            var _a;\n            var _b = _this.props, fill = _b.fill, _c = _b.tagInputProps, tagInputProps = _c === void 0 ? {} : _c, _d = _b.popoverProps, popoverProps = _d === void 0 ? {} : _d, _e = _b.selectedItems, selectedItems = _e === void 0 ? [] : _e, placeholder = _b.placeholder;\n            var handlePaste = listProps.handlePaste, handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;\n            if (fill) {\n                popoverProps.fill = true;\n                tagInputProps.fill = true;\n            }\n            // add our own inputProps.className so that we can reference it in event handlers\n            var inputProps = __assign(__assign({}, tagInputProps.inputProps), { className: classNames((_a = tagInputProps.inputProps) === null || _a === void 0 ? void 0 : _a.className, Classes.MULTISELECT_TAG_INPUT_INPUT) });\n            var handleTagInputAdd = function (values, method) {\n                if (method === \"paste\") {\n                    handlePaste(values);\n                }\n            };\n            return (\n            /* eslint-disable-next-line deprecation/deprecation */\n            React.createElement(Popover, __assign({ autoFocus: false, canEscapeKeyClose: true, enforceFocus: false, isOpen: _this.state.isOpen, position: Position.BOTTOM_LEFT }, popoverProps, { className: classNames(listProps.className, popoverProps.className), interactionKind: PopoverInteractionKind.CLICK, onInteraction: _this.handlePopoverInteraction, popoverClassName: classNames(Classes.MULTISELECT_POPOVER, popoverProps.popoverClassName), onOpened: _this.handlePopoverOpened }),\n                React.createElement(\"div\", { onKeyDown: _this.getTagInputKeyDownHandler(handleKeyDown), onKeyUp: _this.getTagInputKeyUpHandler(handleKeyUp) },\n                    React.createElement(TagInput, __assign({ placeholder: placeholder }, tagInputProps, { className: classNames(Classes.MULTISELECT, tagInputProps.className), inputRef: _this.refHandlers.input, inputProps: inputProps, inputValue: listProps.query, \n                        /* eslint-disable-next-line react/jsx-no-bind */\n                        onAdd: handleTagInputAdd, onInputChange: listProps.handleQueryChange, onRemove: _this.handleTagRemove, values: selectedItems.map(_this.props.tagRenderer) }))),\n                React.createElement(\"div\", { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp }, listProps.itemList)));\n        };\n        _this.handleItemSelect = function (item, evt) {\n            var _a, _b;\n            if (_this.input != null) {\n                _this.input.focus();\n            }\n            (_b = (_a = _this.props).onItemSelect) === null || _b === void 0 ? void 0 : _b.call(_a, item, evt);\n        };\n        _this.handleQueryChange = function (query, evt) {\n            var _a, _b;\n            _this.setState({ isOpen: query.length > 0 || !_this.props.openOnKeyDown });\n            (_b = (_a = _this.props).onQueryChange) === null || _b === void 0 ? void 0 : _b.call(_a, query, evt);\n        };\n        // Popover interaction kind is CLICK, so this only handles click events.\n        // Note that we defer to the next animation frame in order to get the latest document.activeElement\n        _this.handlePopoverInteraction = function (nextOpenState, evt) {\n            return _this.requestAnimationFrame(function () {\n                var _a, _b;\n                var isInputFocused = _this.input === document.activeElement;\n                if (_this.input != null && !isInputFocused) {\n                    // input is no longer focused, we should close the popover\n                    _this.setState({ isOpen: false });\n                }\n                else if (!_this.props.openOnKeyDown) {\n                    // we should open immediately on click focus events\n                    _this.setState({ isOpen: true });\n                }\n                (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onInteraction) === null || _b === void 0 ? void 0 : _b.call(_a, nextOpenState, evt);\n            });\n        };\n        _this.handlePopoverOpened = function (node) {\n            var _a, _b;\n            if (_this.queryList != null) {\n                // scroll active item into view after popover transition completes and all dimensions are stable.\n                _this.queryList.scrollActiveItemIntoView();\n            }\n            (_b = (_a = _this.props.popoverProps) === null || _a === void 0 ? void 0 : _a.onOpened) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        };\n        _this.handleTagRemove = function (tag, index) {\n            var _a;\n            var _b = _this.props, _c = _b.selectedItems, selectedItems = _c === void 0 ? [] : _c, onRemove = _b.onRemove, tagInputProps = _b.tagInputProps;\n            onRemove === null || onRemove === void 0 ? void 0 : onRemove(selectedItems[index], index);\n            (_a = tagInputProps === null || tagInputProps === void 0 ? void 0 : tagInputProps.onRemove) === null || _a === void 0 ? void 0 : _a.call(tagInputProps, tag, index);\n        };\n        _this.getTagInputKeyDownHandler = function (handleQueryListKeyDown) {\n            return function (e) {\n                // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n                // eslint-disable-next-line deprecation/deprecation\n                var which = e.which;\n                if (which === Keys.ESCAPE || which === Keys.TAB) {\n                    // By default the escape key will not trigger a blur on the\n                    // input element. It must be done explicitly.\n                    if (_this.input != null) {\n                        _this.input.blur();\n                    }\n                    _this.setState({ isOpen: false });\n                }\n                else if (!(which === Keys.BACKSPACE || which === Keys.ARROW_LEFT || which === Keys.ARROW_RIGHT)) {\n                    _this.setState({ isOpen: true });\n                }\n                var isTargetingTagRemoveButton = e.target.closest(\".\" + CoreClasses.TAG_REMOVE) != null;\n                if (_this.state.isOpen && !isTargetingTagRemoveButton) {\n                    handleQueryListKeyDown === null || handleQueryListKeyDown === void 0 ? void 0 : handleQueryListKeyDown(e);\n                }\n            };\n        };\n        _this.getTagInputKeyUpHandler = function (handleQueryListKeyUp) {\n            return function (e) {\n                var isTargetingInput = e.target.classList.contains(Classes.MULTISELECT_TAG_INPUT_INPUT);\n                // only handle events when the focus is on the actual <input> inside the TagInput, as that's\n                // what QueryList is designed to do\n                if (_this.state.isOpen && isTargetingInput) {\n                    handleQueryListKeyUp === null || handleQueryListKeyUp === void 0 ? void 0 : handleQueryListKeyUp(e);\n                }\n            };\n        };\n        return _this;\n    }\n    MultiSelect.ofType = function () {\n        return MultiSelect;\n    };\n    MultiSelect.prototype.componentDidUpdate = function (prevProps) {\n        var _a, _b, _c, _d, _e;\n        if (((_a = prevProps.tagInputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.tagInputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {\n            setRef((_c = prevProps.tagInputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);\n            this.refHandlers.input = refHandler(this, \"input\", (_d = this.props.tagInputProps) === null || _d === void 0 ? void 0 : _d.inputRef);\n            setRef((_e = this.props.tagInputProps) === null || _e === void 0 ? void 0 : _e.inputRef, this.input);\n        }\n    };\n    MultiSelect.prototype.render = function () {\n        // omit props specific to this component, spread the rest.\n        var _a = this.props, openOnKeyDown = _a.openOnKeyDown, popoverProps = _a.popoverProps, tagInputProps = _a.tagInputProps, restProps = __rest(_a, [\"openOnKeyDown\", \"popoverProps\", \"tagInputProps\"]);\n        return (React.createElement(this.TypedQueryList, __assign({}, restProps, { onItemSelect: this.handleItemSelect, onQueryChange: this.handleQueryChange, ref: this.refHandlers.queryList, renderer: this.renderQueryList })));\n    };\n    MultiSelect.displayName = DISPLAYNAME_PREFIX + \".MultiSelect\";\n    MultiSelect.defaultProps = {\n        fill: false,\n        placeholder: \"Search...\",\n    };\n    return MultiSelect;\n}(AbstractPureComponent2));\nexport { MultiSelect };\n//# sourceMappingURL=multiSelect.js.map"]},"metadata":{},"sourceType":"module"}