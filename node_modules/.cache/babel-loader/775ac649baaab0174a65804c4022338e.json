{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Divider, HTMLSelect, IconSize } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport { clone } from \"./common/dateUtils\";\nimport { measureTextWidth } from \"./common/utils\";\n\nvar DatePickerCaption =\n/** @class */\nfunction (_super) {\n  __extends(DatePickerCaption, _super);\n\n  function DatePickerCaption() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      monthRightOffset: 0\n    };\n    _this.handleMonthSelectChange = _this.dateChangeHandler(function (d, month) {\n      return d.setMonth(month);\n    }, _this.props.onMonthChange);\n    _this.handleYearSelectChange = _this.dateChangeHandler(function (d, year) {\n      return d.setFullYear(year);\n    }, _this.props.onYearChange);\n    return _this;\n  }\n\n  DatePickerCaption.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        date = _a.date,\n        locale = _a.locale,\n        localeUtils = _a.localeUtils,\n        minDate = _a.minDate,\n        maxDate = _a.maxDate,\n        _b = _a.months,\n        months = _b === void 0 ? localeUtils.getMonths(locale) : _b;\n    var minYear = minDate.getFullYear();\n    var maxYear = maxDate.getFullYear();\n    var displayMonth = date.getMonth();\n    var displayYear = date.getFullYear(); // build the list of available months, limiting based on minDate and maxDate as necessary\n\n    var startMonth = displayYear === minYear ? minDate.getMonth() : 0;\n    var endMonth = displayYear === maxYear ? maxDate.getMonth() + 1 : undefined;\n    var monthOptionElements = months.map(function (month, i) {\n      return {\n        label: month,\n        value: i\n      };\n    }).slice(startMonth, endMonth);\n    var years = [minYear];\n\n    for (var year = minYear + 1; year <= maxYear; ++year) {\n      years.push(year);\n    } // allow out-of-bounds years but disable the option. this handles the Dec 2016 case in #391.\n\n\n    if (displayYear > maxYear) {\n      years.push({\n        value: displayYear,\n        disabled: true\n      });\n    }\n\n    this.displayedMonthText = months[displayMonth];\n    var monthSelect = React.createElement(HTMLSelect, {\n      iconProps: {\n        style: {\n          right: this.state.monthRightOffset\n        }\n      },\n      className: Classes.DATEPICKER_MONTH_SELECT,\n      key: \"month\",\n      minimal: true,\n      onChange: this.handleMonthSelectChange,\n      value: displayMonth,\n      options: monthOptionElements\n    });\n    var yearSelect = React.createElement(HTMLSelect, {\n      className: Classes.DATEPICKER_YEAR_SELECT,\n      key: \"year\",\n      minimal: true,\n      onChange: this.handleYearSelectChange,\n      value: displayYear,\n      options: years\n    });\n    var orderedSelects = this.props.reverseMonthAndYearMenus ? [yearSelect, monthSelect] : [monthSelect, yearSelect];\n    return React.createElement(\"div\", {\n      className: this.props.classNames.caption\n    }, React.createElement(\"div\", {\n      className: Classes.DATEPICKER_CAPTION,\n      ref: function (ref) {\n        return _this.containerElement = ref;\n      }\n    }, orderedSelects), React.createElement(Divider, null));\n  };\n\n  DatePickerCaption.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.requestAnimationFrame(function () {\n      return _this.positionArrows();\n    });\n  };\n\n  DatePickerCaption.prototype.componentDidUpdate = function () {\n    this.positionArrows();\n  };\n\n  DatePickerCaption.prototype.positionArrows = function () {\n    // measure width of text as rendered inside our container element.\n    var monthTextWidth = measureTextWidth(this.displayedMonthText, Classes.DATEPICKER_CAPTION_MEASURE, this.containerElement);\n    var monthSelectWidth = this.containerElement == null ? 0 : this.containerElement.firstElementChild.clientWidth;\n    var rightOffset = Math.max(2, monthSelectWidth - monthTextWidth - IconSize.STANDARD - 2);\n    this.setState({\n      monthRightOffset: rightOffset\n    });\n  };\n\n  DatePickerCaption.prototype.dateChangeHandler = function (updater, handler) {\n    var _this = this;\n\n    return function (e) {\n      var _a, _b;\n\n      var value = parseInt(e.target.value, 10); // ignore change events with invalid values to prevent crash on iOS Safari (#4178)\n\n      if (isNaN(value)) {\n        return;\n      }\n\n      var newDate = clone(_this.props.date);\n      updater(newDate, value);\n      (_b = (_a = _this.props).onDateChange) === null || _b === void 0 ? void 0 : _b.call(_a, newDate);\n      handler === null || handler === void 0 ? void 0 : handler(value);\n    };\n  };\n\n  DatePickerCaption = __decorate([polyfill], DatePickerCaption);\n  return DatePickerCaption;\n}(AbstractPureComponent2);\n\nexport { DatePickerCaption };","map":{"version":3,"sources":["../../src/datePickerCaption.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Divider, HTMLSelect, IconSize } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport { clone } from \"./common/dateUtils\";\nimport { measureTextWidth } from \"./common/utils\";\nvar DatePickerCaption = /** @class */ (function (_super) {\n    __extends(DatePickerCaption, _super);\n    function DatePickerCaption() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { monthRightOffset: 0 };\n        _this.handleMonthSelectChange = _this.dateChangeHandler(function (d, month) { return d.setMonth(month); }, _this.props.onMonthChange);\n        _this.handleYearSelectChange = _this.dateChangeHandler(function (d, year) { return d.setFullYear(year); }, _this.props.onYearChange);\n        return _this;\n    }\n    DatePickerCaption.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, date = _a.date, locale = _a.locale, localeUtils = _a.localeUtils, minDate = _a.minDate, maxDate = _a.maxDate, _b = _a.months, months = _b === void 0 ? localeUtils.getMonths(locale) : _b;\n        var minYear = minDate.getFullYear();\n        var maxYear = maxDate.getFullYear();\n        var displayMonth = date.getMonth();\n        var displayYear = date.getFullYear();\n        // build the list of available months, limiting based on minDate and maxDate as necessary\n        var startMonth = displayYear === minYear ? minDate.getMonth() : 0;\n        var endMonth = displayYear === maxYear ? maxDate.getMonth() + 1 : undefined;\n        var monthOptionElements = months\n            .map(function (month, i) { return ({ label: month, value: i }); })\n            .slice(startMonth, endMonth);\n        var years = [minYear];\n        for (var year = minYear + 1; year <= maxYear; ++year) {\n            years.push(year);\n        }\n        // allow out-of-bounds years but disable the option. this handles the Dec 2016 case in #391.\n        if (displayYear > maxYear) {\n            years.push({ value: displayYear, disabled: true });\n        }\n        this.displayedMonthText = months[displayMonth];\n        var monthSelect = (React.createElement(HTMLSelect, { iconProps: { style: { right: this.state.monthRightOffset } }, className: Classes.DATEPICKER_MONTH_SELECT, key: \"month\", minimal: true, onChange: this.handleMonthSelectChange, value: displayMonth, options: monthOptionElements }));\n        var yearSelect = (React.createElement(HTMLSelect, { className: Classes.DATEPICKER_YEAR_SELECT, key: \"year\", minimal: true, onChange: this.handleYearSelectChange, value: displayYear, options: years }));\n        var orderedSelects = this.props.reverseMonthAndYearMenus\n            ? [yearSelect, monthSelect]\n            : [monthSelect, yearSelect];\n        return (React.createElement(\"div\", { className: this.props.classNames.caption },\n            React.createElement(\"div\", { className: Classes.DATEPICKER_CAPTION, ref: function (ref) { return (_this.containerElement = ref); } }, orderedSelects),\n            React.createElement(Divider, null)));\n    };\n    DatePickerCaption.prototype.componentDidMount = function () {\n        var _this = this;\n        this.requestAnimationFrame(function () { return _this.positionArrows(); });\n    };\n    DatePickerCaption.prototype.componentDidUpdate = function () {\n        this.positionArrows();\n    };\n    DatePickerCaption.prototype.positionArrows = function () {\n        // measure width of text as rendered inside our container element.\n        var monthTextWidth = measureTextWidth(this.displayedMonthText, Classes.DATEPICKER_CAPTION_MEASURE, this.containerElement);\n        var monthSelectWidth = this.containerElement == null ? 0 : this.containerElement.firstElementChild.clientWidth;\n        var rightOffset = Math.max(2, monthSelectWidth - monthTextWidth - IconSize.STANDARD - 2);\n        this.setState({ monthRightOffset: rightOffset });\n    };\n    DatePickerCaption.prototype.dateChangeHandler = function (updater, handler) {\n        var _this = this;\n        return function (e) {\n            var _a, _b;\n            var value = parseInt(e.target.value, 10);\n            // ignore change events with invalid values to prevent crash on iOS Safari (#4178)\n            if (isNaN(value)) {\n                return;\n            }\n            var newDate = clone(_this.props.date);\n            updater(newDate, value);\n            (_b = (_a = _this.props).onDateChange) === null || _b === void 0 ? void 0 : _b.call(_a, newDate);\n            handler === null || handler === void 0 ? void 0 : handler(value);\n        };\n    };\n    DatePickerCaption = __decorate([\n        polyfill\n    ], DatePickerCaption);\n    return DatePickerCaption;\n}(AbstractPureComponent2));\nexport { DatePickerCaption };\n//# sourceMappingURL=datePickerCaption.js.map"]},"metadata":{},"sourceType":"module"}