{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Measure width in pixels of a string displayed with styles provided by `className`.\n * Should only be used if measuring can't be done with existing DOM elements.\n */\nexport function measureTextWidth(text, className, containerElement) {\n  if (className === void 0) {\n    className = \"\";\n  }\n\n  if (containerElement === void 0) {\n    containerElement = document.body;\n  }\n\n  if (containerElement == null) {\n    return 0;\n  }\n\n  var span = document.createElement(\"span\");\n  span.classList.add(className);\n  span.textContent = text;\n  containerElement.appendChild(span);\n  var spanWidth = span.offsetWidth;\n  span.remove();\n  return spanWidth;\n}\nexport function padWithZeroes(str, minLength) {\n  if (str.length < minLength) {\n    return \"\" + stringRepeat(\"0\", minLength - str.length) + str;\n  } else {\n    return str;\n  }\n}\n\nfunction stringRepeat(str, numTimes) {\n  return new Array(numTimes + 1).join(str);\n}","map":{"version":3,"sources":["../../../src/common/utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;;AAIA,OAAM,SAAU,gBAAV,CAA2B,IAA3B,EAAyC,SAAzC,EAAyD,gBAAzD,EAAyF;AAAhD,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,EAAA;AAAc;;AAAE,MAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAmB,QAAQ,CAAC,IAA5B;AAAgC;;AAC3F,MAAI,gBAAgB,IAAI,IAAxB,EAA8B;AAC1B,WAAO,CAAP;AACH;;AACD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACA,EAAA,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB;AACA,EAAA,IAAI,CAAC,WAAL,GAAmB,IAAnB;AAEA,EAAA,gBAAgB,CAAC,WAAjB,CAA6B,IAA7B;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,WAAvB;AACA,EAAA,IAAI,CAAC,MAAL;AAEA,SAAO,SAAP;AACH;AAED,OAAM,SAAU,aAAV,CAAwB,GAAxB,EAAqC,SAArC,EAAsD;AACxD,MAAI,GAAG,CAAC,MAAJ,GAAa,SAAjB,EAA4B;AACxB,WAAO,KAAG,YAAY,CAAC,GAAD,EAAM,SAAS,GAAG,GAAG,CAAC,MAAtB,CAAf,GAA+C,GAAtD;AACH,GAFD,MAEO;AACH,WAAO,GAAP;AACH;AACJ;;AAED,SAAS,YAAT,CAAsB,GAAtB,EAAmC,QAAnC,EAAmD;AAC/C,SAAO,IAAI,KAAJ,CAAU,QAAQ,GAAG,CAArB,EAAwB,IAAxB,CAA6B,GAA7B,CAAP;AACH","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Measure width in pixels of a string displayed with styles provided by `className`.\n * Should only be used if measuring can't be done with existing DOM elements.\n */\nexport function measureTextWidth(text, className, containerElement) {\n    if (className === void 0) { className = \"\"; }\n    if (containerElement === void 0) { containerElement = document.body; }\n    if (containerElement == null) {\n        return 0;\n    }\n    var span = document.createElement(\"span\");\n    span.classList.add(className);\n    span.textContent = text;\n    containerElement.appendChild(span);\n    var spanWidth = span.offsetWidth;\n    span.remove();\n    return spanWidth;\n}\nexport function padWithZeroes(str, minLength) {\n    if (str.length < minLength) {\n        return \"\" + stringRepeat(\"0\", minLength - str.length) + str;\n    }\n    else {\n        return str;\n    }\n}\nfunction stringRepeat(str, numTimes) {\n    return new Array(numTimes + 1).join(str);\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}