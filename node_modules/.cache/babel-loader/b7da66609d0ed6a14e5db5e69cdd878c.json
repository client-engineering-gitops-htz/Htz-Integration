{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getDateNextMonth, getDatePreviousMonth } from \"./dateUtils\";\n\nvar MonthAndYear =\n/** @class */\nfunction () {\n  function MonthAndYear(month, year) {\n    if (month !== null && year !== null) {\n      this.date = new Date(year, month);\n    } else {\n      this.date = new Date();\n    }\n  }\n\n  MonthAndYear.fromDate = function (date) {\n    return date == null ? undefined : new MonthAndYear(date.getMonth(), date.getFullYear());\n  };\n\n  MonthAndYear.prototype.clone = function () {\n    return new MonthAndYear(this.getMonth(), this.getYear());\n  };\n\n  MonthAndYear.prototype.getFullDate = function () {\n    return this.date;\n  };\n\n  MonthAndYear.prototype.getMonth = function () {\n    return this.date.getMonth();\n  };\n\n  MonthAndYear.prototype.getYear = function () {\n    return this.date.getFullYear();\n  };\n\n  MonthAndYear.prototype.getPreviousMonth = function () {\n    var previousMonthDate = getDatePreviousMonth(this.date);\n    return new MonthAndYear(previousMonthDate.getMonth(), previousMonthDate.getFullYear());\n  };\n\n  MonthAndYear.prototype.getNextMonth = function () {\n    var nextMonthDate = getDateNextMonth(this.date);\n    return new MonthAndYear(nextMonthDate.getMonth(), nextMonthDate.getFullYear());\n  };\n\n  MonthAndYear.prototype.isBefore = function (monthAndYear) {\n    return compareMonthAndYear(this, monthAndYear) < 0;\n  };\n\n  MonthAndYear.prototype.isAfter = function (monthAndYear) {\n    return compareMonthAndYear(this, monthAndYear) > 0;\n  };\n\n  MonthAndYear.prototype.isSame = function (monthAndYear) {\n    return compareMonthAndYear(this, monthAndYear) === 0;\n  };\n\n  MonthAndYear.prototype.isSameMonth = function (monthAndYear) {\n    return this.getMonth() === monthAndYear.getMonth();\n  };\n\n  return MonthAndYear;\n}();\n\nexport { MonthAndYear }; // returns negative if left < right\n// returns positive if left > right\n// returns 0 if left === right\n\nfunction compareMonthAndYear(firstMonthAndYear, secondMonthAndYear) {\n  var firstMonth = firstMonthAndYear.getMonth();\n  var firstYear = firstMonthAndYear.getYear();\n  var secondMonth = secondMonthAndYear.getMonth();\n  var secondYear = secondMonthAndYear.getYear();\n\n  if (firstYear === secondYear) {\n    return firstMonth - secondMonth;\n  } else {\n    return firstYear - secondYear;\n  }\n}","map":{"version":3,"sources":["../../../src/common/monthAndYear.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getDateNextMonth, getDatePreviousMonth } from \"./dateUtils\";\nvar MonthAndYear = /** @class */ (function () {\n    function MonthAndYear(month, year) {\n        if (month !== null && year !== null) {\n            this.date = new Date(year, month);\n        }\n        else {\n            this.date = new Date();\n        }\n    }\n    MonthAndYear.fromDate = function (date) {\n        return date == null ? undefined : new MonthAndYear(date.getMonth(), date.getFullYear());\n    };\n    MonthAndYear.prototype.clone = function () {\n        return new MonthAndYear(this.getMonth(), this.getYear());\n    };\n    MonthAndYear.prototype.getFullDate = function () {\n        return this.date;\n    };\n    MonthAndYear.prototype.getMonth = function () {\n        return this.date.getMonth();\n    };\n    MonthAndYear.prototype.getYear = function () {\n        return this.date.getFullYear();\n    };\n    MonthAndYear.prototype.getPreviousMonth = function () {\n        var previousMonthDate = getDatePreviousMonth(this.date);\n        return new MonthAndYear(previousMonthDate.getMonth(), previousMonthDate.getFullYear());\n    };\n    MonthAndYear.prototype.getNextMonth = function () {\n        var nextMonthDate = getDateNextMonth(this.date);\n        return new MonthAndYear(nextMonthDate.getMonth(), nextMonthDate.getFullYear());\n    };\n    MonthAndYear.prototype.isBefore = function (monthAndYear) {\n        return compareMonthAndYear(this, monthAndYear) < 0;\n    };\n    MonthAndYear.prototype.isAfter = function (monthAndYear) {\n        return compareMonthAndYear(this, monthAndYear) > 0;\n    };\n    MonthAndYear.prototype.isSame = function (monthAndYear) {\n        return compareMonthAndYear(this, monthAndYear) === 0;\n    };\n    MonthAndYear.prototype.isSameMonth = function (monthAndYear) {\n        return this.getMonth() === monthAndYear.getMonth();\n    };\n    return MonthAndYear;\n}());\nexport { MonthAndYear };\n// returns negative if left < right\n// returns positive if left > right\n// returns 0 if left === right\nfunction compareMonthAndYear(firstMonthAndYear, secondMonthAndYear) {\n    var firstMonth = firstMonthAndYear.getMonth();\n    var firstYear = firstMonthAndYear.getYear();\n    var secondMonth = secondMonthAndYear.getMonth();\n    var secondYear = secondMonthAndYear.getYear();\n    if (firstYear === secondYear) {\n        return firstMonth - secondMonth;\n    }\n    else {\n        return firstYear - secondYear;\n    }\n}\n//# sourceMappingURL=monthAndYear.js.map"]},"metadata":{},"sourceType":"module"}