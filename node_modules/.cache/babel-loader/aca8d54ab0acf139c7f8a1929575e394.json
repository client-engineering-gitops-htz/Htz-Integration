{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/Github/Hertz-Integration/src/components/RentalDatePicker.js\";\nimport React from \"react\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { DatePicker } from \"@blueprintjs/datetime\";\nimport { Button } from \"@blueprintjs/core\";\nimport { Classes, Popover2 } from \"@blueprintjs/popover2\";\n\nfunction RentalDatePicker({\n  type,\n  setPickupDate,\n  setDropoffDate,\n  pickupDate,\n  dropoffDate\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover2, {\n    interactionKind: \"click\",\n    popoverClassName: Classes.POPOVER2_CONTENT_SIZING,\n    placement: \"bottom\",\n    content: /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: selectedDate => {\n        if (type === \"Pick-Up\") setPickupDate(selectedDate);\n        if (type === \"Drop-Off\") setDropoffDate(selectedDate);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }),\n    renderTarget: ({\n      isOpen,\n      ref,\n      ...targetProps\n    }) => /*#__PURE__*/React.createElement(Button, Object.assign({}, targetProps, {\n      elementRef: ref,\n      intent: \"primary\",\n      text: () => {\n        if (type === \"Pick-Up\" && !pickupDate) {\n          return \"hi\";\n        }\n\n        if (type === \"Pick-Up\") return pickupDate.toDateString();\n        if (type === \"Drop-Off\") return dropoffDate.toDateString();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default RentalDatePicker;","map":{"version":3,"sources":["/Users/andrew/Documents/Github/Hertz-Integration/src/components/RentalDatePicker.js"],"names":["React","DatePicker","Button","Classes","Popover2","RentalDatePicker","type","setPickupDate","setDropoffDate","pickupDate","dropoffDate","POPOVER2_CONTENT_SIZING","selectedDate","isOpen","ref","targetProps","toDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sDAAP;AACA,OAAO,yCAAP;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,uBAAlC;;AAEA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,IADwB;AAExBC,EAAAA,aAFwB;AAGxBC,EAAAA,cAHwB;AAIxBC,EAAAA,UAJwB;AAKxBC,EAAAA;AALwB,CAA1B,EAMG;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,eAAe,EAAC,OADlB;AAEE,IAAA,gBAAgB,EAAEP,OAAO,CAACQ,uBAF5B;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,OAAO,eACL,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAGC,YAAD,IAAkB;AAC1B,YAAIN,IAAI,KAAK,SAAb,EAAwBC,aAAa,CAACK,YAAD,CAAb;AACxB,YAAIN,IAAI,KAAK,UAAb,EAAyBE,cAAc,CAACI,YAAD,CAAd;AAC1B,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ;AAYE,IAAA,YAAY,EAAE,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAe,SAAGC;AAAlB,KAAD,kBACZ,oBAAC,MAAD,oBACMA,WADN;AAEE,MAAA,UAAU,EAAED,GAFd;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,IAAI,EAAE,MAAM;AACV,YAAIR,IAAI,KAAK,SAAT,IAAsB,CAACG,UAA3B,EAAuC;AACrC,iBAAO,IAAP;AACD;;AACD,YAAIH,IAAI,KAAK,SAAb,EAAwB,OAAOG,UAAU,CAACO,YAAX,EAAP;AACxB,YAAIV,IAAI,KAAK,UAAb,EAAyB,OAAOI,WAAW,CAACM,YAAZ,EAAP;AAC1B,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA+BD;;AAED,eAAeX,gBAAf","sourcesContent":["import React from \"react\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { DatePicker } from \"@blueprintjs/datetime\";\nimport { Button } from \"@blueprintjs/core\";\n\nimport { Classes, Popover2 } from \"@blueprintjs/popover2\";\n\nfunction RentalDatePicker({\n  type,\n  setPickupDate,\n  setDropoffDate,\n  pickupDate,\n  dropoffDate,\n}) {\n  return (\n    <div>\n      <Popover2\n        interactionKind=\"click\"\n        popoverClassName={Classes.POPOVER2_CONTENT_SIZING}\n        placement=\"bottom\"\n        content={\n          <DatePicker\n            onChange={(selectedDate) => {\n              if (type === \"Pick-Up\") setPickupDate(selectedDate);\n              if (type === \"Drop-Off\") setDropoffDate(selectedDate);\n            }}\n          />\n        }\n        renderTarget={({ isOpen, ref, ...targetProps }) => (\n          <Button\n            {...targetProps}\n            elementRef={ref}\n            intent=\"primary\"\n            text={() => {\n              if (type === \"Pick-Up\" && !pickupDate) {\n                return \"hi\";\n              }\n              if (type === \"Pick-Up\") return pickupDate.toDateString();\n              if (type === \"Drop-Off\") return dropoffDate.toDateString();\n            }}\n          />\n        )}\n      />\n    </div>\n  );\n}\n\nexport default RentalDatePicker;\n"]},"metadata":{},"sourceType":"module"}