{"ast":null,"code":"var _jsxFileName = \"/Users/lauren/Hertz-Integration/src/components/LocationPicker.js\";\nimport React from \"react\";\nimport { HTMLSelect } from \"@blueprintjs/core\";\n\nconst usLocations = require('../assets/ATPxref_US.json');\n\nconst locations = [{\n  name: \"JFK\",\n  id: 1\n}, {\n  name: \"LGA\",\n  id: 2\n}, {\n  name: \"DFW\",\n  id: 3\n}];\n\nfunction LocationPicker({\n  type,\n  setPickupLocation,\n  setDropoffLocation\n}) {\n  return /*#__PURE__*/React.createElement(HTMLSelect, {\n    large: true,\n    onChange: e => {\n      if (type === \"Pick-Up\") setPickupLocation(e.target.value);\n      if (type === \"Drop-Off\") setDropoffLocation(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, `Choose ${type} location`), usLocations.map(usLocations => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: usLocations.OAG_CODE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    }, usLocations.LOC_NM);\n  }));\n}\n\nexport default LocationPicker;","map":{"version":3,"sources":["/Users/lauren/Hertz-Integration/src/components/LocationPicker.js"],"names":["React","HTMLSelect","usLocations","require","locations","name","id","LocationPicker","type","setPickupLocation","setDropoffLocation","e","target","value","map","OAG_CODE","LOC_NM"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAA3B;;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,EAAE,EAAE;AAAnB,CADgB,EAEhB;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,EAAE,EAAE;AAAnB,CAFgB,EAGhB;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,EAAE,EAAE;AAAnB,CAHgB,CAAlB;;AAMA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,iBAAR;AAA2BC,EAAAA;AAA3B,CAAxB,EAAyE;AACvE,sBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,IADT;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,UAAIH,IAAI,KAAK,SAAb,EAAwBC,iBAAiB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACxB,UAAIL,IAAI,KAAK,UAAb,EAAyBE,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAC1B,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB,UAASL,IAAK,WAAjC,CAPF,EAQGN,WAAW,CAACY,GAAZ,CAAiBZ,WAAD,IAAiB;AAChC,wBAAO;AAAQ,MAAA,KAAK,EAAEA,WAAW,CAACa,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCb,WAAW,CAACc,MAAlD,CAAP;AACD,GAFA,CARH,CADF;AAcD;;AAED,eAAeT,cAAf","sourcesContent":["import React from \"react\";\nimport { HTMLSelect } from \"@blueprintjs/core\";\nconst usLocations = require('../assets/ATPxref_US.json');\n\nconst locations = [\n  { name: \"JFK\", id: 1 },\n  { name: \"LGA\", id: 2 },\n  { name: \"DFW\", id: 3 },\n];\n\nfunction LocationPicker({ type, setPickupLocation, setDropoffLocation }) {\n  return (\n    <HTMLSelect\n      large={true}\n      onChange={(e) => {\n        if (type === \"Pick-Up\") setPickupLocation(e.target.value);\n        if (type === \"Drop-Off\") setDropoffLocation(e.target.value);\n      }}\n    >\n      <option selected>{`Choose ${type} location`}</option>\n      {usLocations.map((usLocations) => {\n        return <option value={usLocations.OAG_CODE}>{usLocations.LOC_NM}</option>;\n      })}\n    </HTMLSelect>\n  );\n}\n\nexport default LocationPicker;\n"]},"metadata":{},"sourceType":"module"}