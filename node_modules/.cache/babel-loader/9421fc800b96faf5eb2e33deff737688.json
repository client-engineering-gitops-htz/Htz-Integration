{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/Github/Hertz-Integration/src/components/RentalDatePicker.js\";\nimport React from \"react\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { DateInput } from \"@blueprintjs/datetime\";\nimport { Button } from \"@blueprintjs/core\";\nimport { Classes, Popover2 } from \"@blueprintjs/popover2\";\n\nfunction RentalDatePicker({\n  type,\n  setPickupDate,\n  setDropoffDate,\n  pickupDate,\n  dropoffDate\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, type === \"Pick-Up\" && /*#__PURE__*/React.createElement(DateInput, {\n    formatDate: date => date.toLocaleDateString(),\n    onChange: selectedDate => {\n      if (type === \"Pick-Up\") setPickupDate(selectedDate);\n    },\n    parseDate: str => new Date(str),\n    placeholder: \"M/D/YYYY\",\n    highlightCurrentDay: true,\n    value: !!pickupDate ? pickupDate : Date.now(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), type === \"Drop-Off\" && /*#__PURE__*/React.createElement(DateInput, {\n    formatDate: date => date.toLocaleDateString(),\n    onChange: selectedDate => {\n      if (type === \"Drop-Off\") setDropoffDate(selectedDate);\n    },\n    parseDate: str => new Date(str),\n    placeholder: \"M/D/YYYY\",\n    highlightCurrentDay: true,\n    value: !!dropoffDate ? dropoffDate : new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default RentalDatePicker;","map":{"version":3,"sources":["/Users/andrew/Documents/Github/Hertz-Integration/src/components/RentalDatePicker.js"],"names":["React","DateInput","Button","Classes","Popover2","RentalDatePicker","type","setPickupDate","setDropoffDate","pickupDate","dropoffDate","date","toLocaleDateString","selectedDate","str","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sDAAP;AACA,OAAO,yCAAP;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,uBAAlC;;AAEA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,IADwB;AAExBC,EAAAA,aAFwB;AAGxBC,EAAAA,cAHwB;AAIxBC,EAAAA,UAJwB;AAKxBC,EAAAA;AALwB,CAA1B,EAMG;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,KAAK,SAAT,iBACC,oBAAC,SAAD;AACE,IAAA,UAAU,EAAGK,IAAD,IAAUA,IAAI,CAACC,kBAAL,EADxB;AAEE,IAAA,QAAQ,EAAGC,YAAD,IAAkB;AAC1B,UAAIP,IAAI,KAAK,SAAb,EAAwBC,aAAa,CAACM,YAAD,CAAb;AACzB,KAJH;AAKE,IAAA,SAAS,EAAGC,GAAD,IAAS,IAAIC,IAAJ,CAASD,GAAT,CALtB;AAME,IAAA,WAAW,EAAE,UANf;AAOE,IAAA,mBAAmB,EAAE,IAPvB;AAQE,IAAA,KAAK,EAAE,CAAC,CAACL,UAAF,GAAeA,UAAf,GAA4BM,IAAI,CAACC,GAAL,EARrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAcGV,IAAI,KAAK,UAAT,iBACC,oBAAC,SAAD;AACE,IAAA,UAAU,EAAGK,IAAD,IAAUA,IAAI,CAACC,kBAAL,EADxB;AAEE,IAAA,QAAQ,EAAGC,YAAD,IAAkB;AAC1B,UAAIP,IAAI,KAAK,UAAb,EAAyBE,cAAc,CAACK,YAAD,CAAd;AAC1B,KAJH;AAKE,IAAA,SAAS,EAAGC,GAAD,IAAS,IAAIC,IAAJ,CAASD,GAAT,CALtB;AAME,IAAA,WAAW,EAAE,UANf;AAOE,IAAA,mBAAmB,EAAE,IAPvB;AAQE,IAAA,KAAK,EAAE,CAAC,CAACJ,WAAF,GAAgBA,WAAhB,GAA8B,IAAIK,IAAJ,EARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADF;AA6BD;;AAED,eAAeV,gBAAf","sourcesContent":["import React from \"react\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { DateInput } from \"@blueprintjs/datetime\";\nimport { Button } from \"@blueprintjs/core\";\n\nimport { Classes, Popover2 } from \"@blueprintjs/popover2\";\n\nfunction RentalDatePicker({\n  type,\n  setPickupDate,\n  setDropoffDate,\n  pickupDate,\n  dropoffDate,\n}) {\n  return (\n    <div>\n      {type === \"Pick-Up\" && (\n        <DateInput\n          formatDate={(date) => date.toLocaleDateString()}\n          onChange={(selectedDate) => {\n            if (type === \"Pick-Up\") setPickupDate(selectedDate);\n          }}\n          parseDate={(str) => new Date(str)}\n          placeholder={\"M/D/YYYY\"}\n          highlightCurrentDay={true}\n          value={!!pickupDate ? pickupDate : Date.now()}\n        />\n      )}\n\n      {type === \"Drop-Off\" && (\n        <DateInput\n          formatDate={(date) => date.toLocaleDateString()}\n          onChange={(selectedDate) => {\n            if (type === \"Drop-Off\") setDropoffDate(selectedDate);\n          }}\n          parseDate={(str) => new Date(str)}\n          placeholder={\"M/D/YYYY\"}\n          highlightCurrentDay={true}\n          value={!!dropoffDate ? dropoffDate : new Date()}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default RentalDatePicker;\n"]},"metadata":{},"sourceType":"module"}