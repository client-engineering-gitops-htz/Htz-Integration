{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./classes\";\nimport { getBasePlacement } from \"./utils\"; // these paths come from the Core Kit Sketch file\n// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch\n\nvar SVG_SHADOW_PATH = \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" + \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nvar SVG_ARROW_PATH = \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" + \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\"; // additional space between arrow and edge of target\n\nvar ARROW_SPACING = 4;\nexport var POPOVER_ARROW_SVG_SIZE = 30;\nexport var TOOLTIP_ARROW_SVG_SIZE = 22;\n/** Modifier helper function to compute arrow rotate() transform */\n\nfunction getArrowAngle(placement) {\n  if (placement == null) {\n    return 0;\n  } // can only be top/left/bottom/right - auto is resolved internally\n\n\n  switch (getBasePlacement(placement)) {\n    case \"top\":\n      return -90;\n\n    case \"left\":\n      return 180;\n\n    case \"bottom\":\n      return 90;\n\n    default:\n      return 0;\n  }\n}\n/**\n * Popper's builtin \"arrow\" modifier options.padding doesn't seem to work for us, so we\n * need to compute our own offset in the direction of the popover relative to the reference.\n */\n\n\nfunction getArrowReferenceOffsetStyle(placement) {\n  var offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;\n\n  switch (getBasePlacement(placement)) {\n    case \"top\":\n      return {\n        bottom: -offset\n      };\n\n    case \"left\":\n      return {\n        right: -offset\n      };\n\n    case \"bottom\":\n      return {\n        top: -offset\n      };\n\n    default:\n      return {\n        left: -offset\n      };\n  }\n}\n\nexport var Popover2Arrow = function (_a) {\n  var _b = _a.arrowProps,\n      ref = _b.ref,\n      style = _b.style,\n      placement = _a.placement;\n  return (// data attribute allows popper.js to position the arrow\n    React.createElement(\"div\", {\n      className: Classes.POPOVER2_ARROW,\n      \"data-popper-arrow\": true,\n      ref: ref,\n      style: __assign(__assign({}, style), getArrowReferenceOffsetStyle(placement))\n    }, React.createElement(\"svg\", {\n      viewBox: \"0 0 \" + POPOVER_ARROW_SVG_SIZE + \" \" + POPOVER_ARROW_SVG_SIZE,\n      style: {\n        transform: \"rotate(\" + getArrowAngle(placement) + \"deg)\"\n      }\n    }, React.createElement(\"path\", {\n      className: Classes.POPOVER2_ARROW + \"-border\",\n      d: SVG_SHADOW_PATH\n    }), React.createElement(\"path\", {\n      className: Classes.POPOVER2_ARROW + \"-fill\",\n      d: SVG_ARROW_PATH\n    })))\n  );\n};\nPopover2Arrow.displayName = DISPLAYNAME_PREFIX + \".Popover2Arrow\";","map":{"version":3,"sources":["../../src/popover2Arrow.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAGA,SAAS,kBAAT,QAAmC,mBAAnC;AAEA,OAAO,KAAK,OAAZ,MAAyB,WAAzB;AACA,SAAS,gBAAT,QAAiC,SAAjC,C,CAEA;AACA;;AACA,IAAM,eAAe,GACjB,8DACA,+EAFJ;AAGA,IAAM,cAAc,GAChB,4DACA,iFAFJ,C,CAIA;;AACA,IAAM,aAAa,GAAG,CAAtB;AACA,OAAO,IAAM,sBAAsB,GAAG,EAA/B;AACP,OAAO,IAAM,sBAAsB,GAAG,EAA/B;AAEP;;AACA,SAAS,aAAT,CAAuB,SAAvB,EAA4C;AACxC,MAAI,SAAS,IAAI,IAAjB,EAAuB;AACnB,WAAO,CAAP;AACH,GAHuC,CAIxC;;;AACA,UAAQ,gBAAgB,CAAC,SAAD,CAAxB;AACI,SAAK,KAAL;AACI,aAAO,CAAC,EAAR;;AACJ,SAAK,MAAL;AACI,aAAO,GAAP;;AACJ,SAAK,QAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAO,CAAP;AARR;AAUH;AAED;;;;;;AAIA,SAAS,4BAAT,CAAsC,SAAtC,EAA0D;AACtD,MAAM,MAAM,GAAG,sBAAsB,GAAG,CAAzB,GAA6B,aAA5C;;AACA,UAAQ,gBAAgB,CAAC,SAAD,CAAxB;AACI,SAAK,KAAL;AACI,aAAO;AAAE,QAAA,MAAM,EAAE,CAAC;AAAX,OAAP;;AACJ,SAAK,MAAL;AACI,aAAO;AAAE,QAAA,KAAK,EAAE,CAAC;AAAV,OAAP;;AACJ,SAAK,QAAL;AACI,aAAO;AAAE,QAAA,GAAG,EAAE,CAAC;AAAR,OAAP;;AACJ;AACI,aAAO;AAAE,QAAA,IAAI,EAAE,CAAC;AAAT,OAAP;AARR;AAUH;;AAOD,OAAO,IAAM,aAAa,GAAgD,UAAC,EAAD,EAGzE;MAFG,EAAA,GAAA,EAAA,CAAA,U;MAAc,GAAG,GAAA,EAAA,CAAA,G;MAAE,KAAK,GAAA,EAAA,CAAA,K;MACxB,SAAS,GAAA,EAAA,CAAA,S;AACP,SACF;AACA,IAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACI,MAAA,SAAS,EAAE,OAAO,CAAC,cADvB;AACqC,2BACd,IAFvB;AAGI,MAAA,GAAG,EAAE,GAHT;AAII,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACE,KADF,CAAA,EAEE,4BAA4B,CAAC,SAAD,CAF9B;AAJT,KAAA,EASI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACI,MAAA,OAAO,EAAE,SAAO,sBAAP,GAA6B,GAA7B,GAAiC,sBAD9C;AAEI,MAAA,KAAK,EAAE;AAAE,QAAA,SAAS,EAAE,YAAU,aAAa,CAAC,SAAD,CAAvB,GAAkC;AAA/C;AAFX,KAAA,EAII,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,OAAO,CAAC,cAAR,GAAyB,SAA1C;AAAqD,MAAA,CAAC,EAAE;AAAxD,KAAA,CAJJ,EAKI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,OAAO,CAAC,cAAR,GAAyB,OAA1C;AAAmD,MAAA,CAAC,EAAE;AAAtD,KAAA,CALJ,CATJ;AAFE;AAmBL,CAtBM;AAuBP,aAAa,CAAC,WAAd,GAA+B,kBAAkB,GAAA,gBAAjD","sourceRoot":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./classes\";\nimport { getBasePlacement } from \"./utils\";\n// these paths come from the Core Kit Sketch file\n// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch\nvar SVG_SHADOW_PATH = \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" +\n    \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nvar SVG_ARROW_PATH = \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" +\n    \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\";\n// additional space between arrow and edge of target\nvar ARROW_SPACING = 4;\nexport var POPOVER_ARROW_SVG_SIZE = 30;\nexport var TOOLTIP_ARROW_SVG_SIZE = 22;\n/** Modifier helper function to compute arrow rotate() transform */\nfunction getArrowAngle(placement) {\n    if (placement == null) {\n        return 0;\n    }\n    // can only be top/left/bottom/right - auto is resolved internally\n    switch (getBasePlacement(placement)) {\n        case \"top\":\n            return -90;\n        case \"left\":\n            return 180;\n        case \"bottom\":\n            return 90;\n        default:\n            return 0;\n    }\n}\n/**\n * Popper's builtin \"arrow\" modifier options.padding doesn't seem to work for us, so we\n * need to compute our own offset in the direction of the popover relative to the reference.\n */\nfunction getArrowReferenceOffsetStyle(placement) {\n    var offset = POPOVER_ARROW_SVG_SIZE / 2 - ARROW_SPACING;\n    switch (getBasePlacement(placement)) {\n        case \"top\":\n            return { bottom: -offset };\n        case \"left\":\n            return { right: -offset };\n        case \"bottom\":\n            return { top: -offset };\n        default:\n            return { left: -offset };\n    }\n}\nexport var Popover2Arrow = function (_a) {\n    var _b = _a.arrowProps, ref = _b.ref, style = _b.style, placement = _a.placement;\n    return (\n    // data attribute allows popper.js to position the arrow\n    React.createElement(\"div\", { className: Classes.POPOVER2_ARROW, \"data-popper-arrow\": true, ref: ref, style: __assign(__assign({}, style), getArrowReferenceOffsetStyle(placement)) },\n        React.createElement(\"svg\", { viewBox: \"0 0 \" + POPOVER_ARROW_SVG_SIZE + \" \" + POPOVER_ARROW_SVG_SIZE, style: { transform: \"rotate(\" + getArrowAngle(placement) + \"deg)\" } },\n            React.createElement(\"path\", { className: Classes.POPOVER2_ARROW + \"-border\", d: SVG_SHADOW_PATH }),\n            React.createElement(\"path\", { className: Classes.POPOVER2_ARROW + \"-fill\", d: SVG_ARROW_PATH }))));\n};\nPopover2Arrow.displayName = DISPLAYNAME_PREFIX + \".Popover2Arrow\";\n//# sourceMappingURL=popover2Arrow.js.map"]},"metadata":{},"sourceType":"module"}