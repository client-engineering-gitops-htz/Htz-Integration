{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport { DatePicker } from \"./datePicker\";\nimport { TimePicker } from \"./timePicker\";\n/** @deprecated since 3.4.0. Prefer `<DatePicker>` with `timePrecision` and `timePickerProps`. */\n\nvar DateTimePicker =\n/** @class */\nfunction (_super) {\n  __extends(DateTimePicker, _super);\n\n  function DateTimePicker(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.handleDateChange = function (dateValue, isUserChange) {\n      var _a, _b;\n\n      if (_this.props.value === undefined) {\n        _this.setState({\n          dateValue: dateValue\n        });\n      }\n\n      var value = DateUtils.getDateTime(dateValue, _this.state.timeValue);\n      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, isUserChange);\n    };\n\n    _this.handleTimeChange = function (timeValue) {\n      var _a, _b;\n\n      if (_this.props.value === undefined) {\n        _this.setState({\n          timeValue: timeValue\n        });\n      }\n\n      var value = DateUtils.getDateTime(_this.state.dateValue, timeValue);\n      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, true);\n    };\n\n    var initialValue = _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue;\n    _this.state = {\n      dateValue: initialValue,\n      timeValue: initialValue\n    };\n    return _this;\n  }\n\n  DateTimePicker.prototype.render = function () {\n    var value = DateUtils.getDateTime(this.state.dateValue, this.state.timeValue);\n    return React.createElement(\"div\", {\n      className: classNames(Classes.DATETIMEPICKER, this.props.className)\n    }, React.createElement(DatePicker, __assign({}, this.props.datePickerProps, {\n      canClearSelection: this.props.canClearSelection,\n      onChange: this.handleDateChange,\n      value: value\n    })), React.createElement(TimePicker, __assign({}, this.props.timePickerProps, {\n      onChange: this.handleTimeChange,\n      value: this.state.timeValue\n    })));\n  };\n\n  DateTimePicker.prototype.componentDidUpdate = function (prevProps) {\n    if (this.props.value === prevProps.value) {\n      return;\n    } else if (this.props.value != null) {\n      this.setState({\n        dateValue: this.props.value,\n        timeValue: this.props.value\n      });\n    } else {\n      // clear only the date to remove the selected-date style in the calendar\n      this.setState({\n        dateValue: null\n      });\n    }\n  };\n\n  DateTimePicker.defaultProps = {\n    canClearSelection: true,\n    defaultValue: new Date()\n  };\n  DateTimePicker.displayName = DISPLAYNAME_PREFIX + \".DateTimePicker\";\n  DateTimePicker = __decorate([polyfill], DateTimePicker);\n  return DateTimePicker;\n}(AbstractPureComponent2);\n\nexport { DateTimePicker };","map":{"version":3,"sources":["../../src/dateTimePicker.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport { DatePicker } from \"./datePicker\";\nimport { TimePicker } from \"./timePicker\";\n/** @deprecated since 3.4.0. Prefer `<DatePicker>` with `timePrecision` and `timePickerProps`. */\nvar DateTimePicker = /** @class */ (function (_super) {\n    __extends(DateTimePicker, _super);\n    function DateTimePicker(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.handleDateChange = function (dateValue, isUserChange) {\n            var _a, _b;\n            if (_this.props.value === undefined) {\n                _this.setState({ dateValue: dateValue });\n            }\n            var value = DateUtils.getDateTime(dateValue, _this.state.timeValue);\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, isUserChange);\n        };\n        _this.handleTimeChange = function (timeValue) {\n            var _a, _b;\n            if (_this.props.value === undefined) {\n                _this.setState({ timeValue: timeValue });\n            }\n            var value = DateUtils.getDateTime(_this.state.dateValue, timeValue);\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, true);\n        };\n        var initialValue = _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue;\n        _this.state = {\n            dateValue: initialValue,\n            timeValue: initialValue,\n        };\n        return _this;\n    }\n    DateTimePicker.prototype.render = function () {\n        var value = DateUtils.getDateTime(this.state.dateValue, this.state.timeValue);\n        return (React.createElement(\"div\", { className: classNames(Classes.DATETIMEPICKER, this.props.className) },\n            React.createElement(DatePicker, __assign({}, this.props.datePickerProps, { canClearSelection: this.props.canClearSelection, onChange: this.handleDateChange, value: value })),\n            React.createElement(TimePicker, __assign({}, this.props.timePickerProps, { onChange: this.handleTimeChange, value: this.state.timeValue }))));\n    };\n    DateTimePicker.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.value === prevProps.value) {\n            return;\n        }\n        else if (this.props.value != null) {\n            this.setState({\n                dateValue: this.props.value,\n                timeValue: this.props.value,\n            });\n        }\n        else {\n            // clear only the date to remove the selected-date style in the calendar\n            this.setState({ dateValue: null });\n        }\n    };\n    DateTimePicker.defaultProps = {\n        canClearSelection: true,\n        defaultValue: new Date(),\n    };\n    DateTimePicker.displayName = DISPLAYNAME_PREFIX + \".DateTimePicker\";\n    DateTimePicker = __decorate([\n        polyfill\n    ], DateTimePicker);\n    return DateTimePicker;\n}(AbstractPureComponent2));\nexport { DateTimePicker };\n//# sourceMappingURL=dateTimePicker.js.map"]},"metadata":{},"sourceType":"module"}