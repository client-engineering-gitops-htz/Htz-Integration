{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Months } from \"./months\";\nexport function isDateValid(date) {\n  return date instanceof Date && !isNaN(date.valueOf());\n}\nexport function areEqual(date1, date2) {\n  if (date1 == null && date2 == null) {\n    return true;\n  } else if (date1 == null || date2 == null) {\n    return false;\n  } else {\n    return date1.getTime() === date2.getTime();\n  }\n}\nexport function areRangesEqual(dateRange1, dateRange2) {\n  if (dateRange1 == null && dateRange2 == null) {\n    return true;\n  } else if (dateRange1 == null || dateRange2 == null) {\n    return false;\n  } else {\n    var start1 = dateRange1[0],\n        end1 = dateRange1[1];\n    var start2 = dateRange2[0],\n        end2 = dateRange2[1];\n    var areStartsEqual = start1 == null && start2 == null || areSameDay(start1, start2);\n    var areEndsEqual = end1 == null && end2 == null || areSameDay(end1, end2);\n    return areStartsEqual && areEndsEqual;\n  }\n}\nexport function areSameDay(date1, date2) {\n  return areSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n}\nexport function areSameMonth(date1, date2) {\n  return date1 != null && date2 != null && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear();\n}\nexport function areSameTime(date1, date2) {\n  return date1 != null && date2 != null && date1.getHours() === date2.getHours() && date1.getMinutes() === date2.getMinutes() && date1.getSeconds() === date2.getSeconds() && date1.getMilliseconds() === date2.getMilliseconds();\n}\nexport function clone(d) {\n  return new Date(d.getTime());\n}\nexport function isDayInRange(date, dateRange, exclusive) {\n  if (exclusive === void 0) {\n    exclusive = false;\n  }\n\n  if (date == null) {\n    return false;\n  }\n\n  var day = clone(date);\n  var start = clone(dateRange[0]);\n  var end = clone(dateRange[1]);\n  day.setHours(0, 0, 0, 0);\n  start.setHours(0, 0, 0, 0);\n  end.setHours(0, 0, 0, 0);\n  return start <= day && day <= end && (!exclusive || !areSameDay(start, day) && !areSameDay(day, end));\n}\nexport function isDayRangeInRange(innerRange, outerRange) {\n  return (innerRange[0] == null || isDayInRange(innerRange[0], outerRange)) && (innerRange[1] == null || isDayInRange(innerRange[1], outerRange));\n}\nexport function isMonthInRange(date, dateRange) {\n  if (date == null) {\n    return false;\n  }\n\n  var day = clone(date);\n  var start = clone(dateRange[0]);\n  var end = clone(dateRange[1]);\n  day.setDate(1);\n  start.setDate(1);\n  end.setDate(1);\n  day.setHours(0, 0, 0, 0);\n  start.setHours(0, 0, 0, 0);\n  end.setHours(0, 0, 0, 0);\n  return start <= day && day <= end;\n}\nexport var isTimeEqualOrGreaterThan = function (time, timeToCompare) {\n  return time.getTime() >= timeToCompare.getTime();\n};\nexport var isTimeEqualOrSmallerThan = function (time, timeToCompare) {\n  return time.getTime() <= timeToCompare.getTime();\n};\nexport function isTimeInRange(date, minDate, maxDate) {\n  var time = getDateOnlyWithTime(date);\n  var minTime = getDateOnlyWithTime(minDate);\n  var maxTime = getDateOnlyWithTime(maxDate);\n  var isTimeGreaterThanMinTime = isTimeEqualOrGreaterThan(time, minTime);\n  var isTimeSmallerThanMaxTime = isTimeEqualOrSmallerThan(time, maxTime);\n\n  if (isTimeEqualOrSmallerThan(maxTime, minTime)) {\n    return isTimeGreaterThanMinTime || isTimeSmallerThanMaxTime;\n  }\n\n  return isTimeGreaterThanMinTime && isTimeSmallerThanMaxTime;\n}\nexport function getTimeInRange(time, minTime, maxTime) {\n  if (areSameTime(minTime, maxTime)) {\n    return maxTime;\n  } else if (isTimeInRange(time, minTime, maxTime)) {\n    return time;\n  } else if (isTimeSameOrAfter(time, maxTime)) {\n    return maxTime;\n  }\n\n  return minTime;\n}\n/**\n * Returns true if the time part of `date` is later than or equal to the time\n * part of `dateToCompare`. The day, month, and year parts will not be compared.\n */\n\nexport function isTimeSameOrAfter(date, dateToCompare) {\n  var time = getDateOnlyWithTime(date);\n  var timeToCompare = getDateOnlyWithTime(dateToCompare);\n  return isTimeEqualOrGreaterThan(time, timeToCompare);\n}\n/**\n * @returns a Date at the exact time-wise midpoint between startDate and endDate\n */\n\nexport function getDateBetween(dateRange) {\n  var start = dateRange[0].getTime();\n  var end = dateRange[1].getTime();\n  var middle = start + (end - start) * 0.5;\n  return new Date(middle);\n}\nexport function getDateTime(date, time) {\n  if (date == null) {\n    return null;\n  } else if (time == null) {\n    // cannot use default argument because `null` is a common value in this package.\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n  } else {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n  }\n}\nexport function getDateOnlyWithTime(date) {\n  return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n}\nexport function getDatePreviousMonth(date) {\n  if (date.getMonth() === Months.JANUARY) {\n    return new Date(date.getFullYear() - 1, Months.DECEMBER);\n  } else {\n    return new Date(date.getFullYear(), date.getMonth() - 1);\n  }\n}\nexport function getDateNextMonth(date) {\n  if (date.getMonth() === Months.DECEMBER) {\n    return new Date(date.getFullYear() + 1, Months.JANUARY);\n  } else {\n    return new Date(date.getFullYear(), date.getMonth() + 1);\n  }\n}\nexport function convert24HourMeridiem(hour, toPm) {\n  if (hour < 0 || hour > 23) {\n    throw new Error(\"hour must be between [0,23] inclusive: got \" + hour);\n  }\n\n  return toPm ? hour % 12 + 12 : hour % 12;\n}\nexport function getIsPmFrom24Hour(hour) {\n  if (hour < 0 || hour > 23) {\n    throw new Error(\"hour must be between [0,23] inclusive: got \" + hour);\n  }\n\n  return hour >= 12;\n}\nexport function get12HourFrom24Hour(hour) {\n  if (hour < 0 || hour > 23) {\n    throw new Error(\"hour must be between [0,23] inclusive: got \" + hour);\n  }\n\n  var newHour = hour % 12;\n  return newHour === 0 ? 12 : newHour;\n}\nexport function get24HourFrom12Hour(hour, isPm) {\n  if (hour < 1 || hour > 12) {\n    throw new Error(\"hour must be between [1,12] inclusive: got \" + hour);\n  }\n\n  var newHour = hour === 12 ? 0 : hour;\n  return isPm ? newHour + 12 : newHour;\n}\nexport function isToday(date) {\n  return areSameDay(date, new Date());\n}","map":{"version":3,"sources":["../../../src/common/dateUtils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Months } from \"./months\";\nexport function isDateValid(date) {\n    return date instanceof Date && !isNaN(date.valueOf());\n}\nexport function areEqual(date1, date2) {\n    if (date1 == null && date2 == null) {\n        return true;\n    }\n    else if (date1 == null || date2 == null) {\n        return false;\n    }\n    else {\n        return date1.getTime() === date2.getTime();\n    }\n}\nexport function areRangesEqual(dateRange1, dateRange2) {\n    if (dateRange1 == null && dateRange2 == null) {\n        return true;\n    }\n    else if (dateRange1 == null || dateRange2 == null) {\n        return false;\n    }\n    else {\n        var start1 = dateRange1[0], end1 = dateRange1[1];\n        var start2 = dateRange2[0], end2 = dateRange2[1];\n        var areStartsEqual = (start1 == null && start2 == null) || areSameDay(start1, start2);\n        var areEndsEqual = (end1 == null && end2 == null) || areSameDay(end1, end2);\n        return areStartsEqual && areEndsEqual;\n    }\n}\nexport function areSameDay(date1, date2) {\n    return areSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n}\nexport function areSameMonth(date1, date2) {\n    return (date1 != null &&\n        date2 != null &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getFullYear() === date2.getFullYear());\n}\nexport function areSameTime(date1, date2) {\n    return (date1 != null &&\n        date2 != null &&\n        date1.getHours() === date2.getHours() &&\n        date1.getMinutes() === date2.getMinutes() &&\n        date1.getSeconds() === date2.getSeconds() &&\n        date1.getMilliseconds() === date2.getMilliseconds());\n}\nexport function clone(d) {\n    return new Date(d.getTime());\n}\nexport function isDayInRange(date, dateRange, exclusive) {\n    if (exclusive === void 0) { exclusive = false; }\n    if (date == null) {\n        return false;\n    }\n    var day = clone(date);\n    var start = clone(dateRange[0]);\n    var end = clone(dateRange[1]);\n    day.setHours(0, 0, 0, 0);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n    return start <= day && day <= end && (!exclusive || (!areSameDay(start, day) && !areSameDay(day, end)));\n}\nexport function isDayRangeInRange(innerRange, outerRange) {\n    return ((innerRange[0] == null || isDayInRange(innerRange[0], outerRange)) &&\n        (innerRange[1] == null || isDayInRange(innerRange[1], outerRange)));\n}\nexport function isMonthInRange(date, dateRange) {\n    if (date == null) {\n        return false;\n    }\n    var day = clone(date);\n    var start = clone(dateRange[0]);\n    var end = clone(dateRange[1]);\n    day.setDate(1);\n    start.setDate(1);\n    end.setDate(1);\n    day.setHours(0, 0, 0, 0);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n    return start <= day && day <= end;\n}\nexport var isTimeEqualOrGreaterThan = function (time, timeToCompare) { return time.getTime() >= timeToCompare.getTime(); };\nexport var isTimeEqualOrSmallerThan = function (time, timeToCompare) { return time.getTime() <= timeToCompare.getTime(); };\nexport function isTimeInRange(date, minDate, maxDate) {\n    var time = getDateOnlyWithTime(date);\n    var minTime = getDateOnlyWithTime(minDate);\n    var maxTime = getDateOnlyWithTime(maxDate);\n    var isTimeGreaterThanMinTime = isTimeEqualOrGreaterThan(time, minTime);\n    var isTimeSmallerThanMaxTime = isTimeEqualOrSmallerThan(time, maxTime);\n    if (isTimeEqualOrSmallerThan(maxTime, minTime)) {\n        return isTimeGreaterThanMinTime || isTimeSmallerThanMaxTime;\n    }\n    return isTimeGreaterThanMinTime && isTimeSmallerThanMaxTime;\n}\nexport function getTimeInRange(time, minTime, maxTime) {\n    if (areSameTime(minTime, maxTime)) {\n        return maxTime;\n    }\n    else if (isTimeInRange(time, minTime, maxTime)) {\n        return time;\n    }\n    else if (isTimeSameOrAfter(time, maxTime)) {\n        return maxTime;\n    }\n    return minTime;\n}\n/**\n * Returns true if the time part of `date` is later than or equal to the time\n * part of `dateToCompare`. The day, month, and year parts will not be compared.\n */\nexport function isTimeSameOrAfter(date, dateToCompare) {\n    var time = getDateOnlyWithTime(date);\n    var timeToCompare = getDateOnlyWithTime(dateToCompare);\n    return isTimeEqualOrGreaterThan(time, timeToCompare);\n}\n/**\n * @returns a Date at the exact time-wise midpoint between startDate and endDate\n */\nexport function getDateBetween(dateRange) {\n    var start = dateRange[0].getTime();\n    var end = dateRange[1].getTime();\n    var middle = start + (end - start) * 0.5;\n    return new Date(middle);\n}\nexport function getDateTime(date, time) {\n    if (date == null) {\n        return null;\n    }\n    else if (time == null) {\n        // cannot use default argument because `null` is a common value in this package.\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n    }\n    else {\n        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n    }\n}\nexport function getDateOnlyWithTime(date) {\n    return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n}\nexport function getDatePreviousMonth(date) {\n    if (date.getMonth() === Months.JANUARY) {\n        return new Date(date.getFullYear() - 1, Months.DECEMBER);\n    }\n    else {\n        return new Date(date.getFullYear(), date.getMonth() - 1);\n    }\n}\nexport function getDateNextMonth(date) {\n    if (date.getMonth() === Months.DECEMBER) {\n        return new Date(date.getFullYear() + 1, Months.JANUARY);\n    }\n    else {\n        return new Date(date.getFullYear(), date.getMonth() + 1);\n    }\n}\nexport function convert24HourMeridiem(hour, toPm) {\n    if (hour < 0 || hour > 23) {\n        throw new Error(\"hour must be between [0,23] inclusive: got \" + hour);\n    }\n    return toPm ? (hour % 12) + 12 : hour % 12;\n}\nexport function getIsPmFrom24Hour(hour) {\n    if (hour < 0 || hour > 23) {\n        throw new Error(\"hour must be between [0,23] inclusive: got \" + hour);\n    }\n    return hour >= 12;\n}\nexport function get12HourFrom24Hour(hour) {\n    if (hour < 0 || hour > 23) {\n        throw new Error(\"hour must be between [0,23] inclusive: got \" + hour);\n    }\n    var newHour = hour % 12;\n    return newHour === 0 ? 12 : newHour;\n}\nexport function get24HourFrom12Hour(hour, isPm) {\n    if (hour < 1 || hour > 12) {\n        throw new Error(\"hour must be between [1,12] inclusive: got \" + hour);\n    }\n    var newHour = hour === 12 ? 0 : hour;\n    return isPm ? newHour + 12 : newHour;\n}\nexport function isToday(date) {\n    return areSameDay(date, new Date());\n}\n//# sourceMappingURL=dateUtils.js.map"]},"metadata":{},"sourceType":"module"}