{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, DISPLAYNAME_PREFIX, HTMLSelect, Icon, Intent, Keys } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport { getDefaultMaxTime, getDefaultMinTime, getTimeUnit, getTimeUnitClassName, isTimeUnitValid, setTimeUnit, TimeUnit, wrapTimeAtUnit } from \"./common/timeUnit\";\nimport * as Utils from \"./common/utils\";\nexport var TimePrecision = {\n  MILLISECOND: \"millisecond\",\n  MINUTE: \"minute\",\n  SECOND: \"second\"\n};\n\nvar TimePicker =\n/** @class */\nfunction (_super) {\n  __extends(TimePicker, _super);\n\n  function TimePicker(props, context) {\n    var _this = _super.call(this, props, context) || this; // begin method definitions: event handlers\n\n\n    _this.getInputChangeHandler = function (unit) {\n      return function (e) {\n        var text = getStringValueFromInputEvent(e);\n\n        switch (unit) {\n          case TimeUnit.HOUR_12:\n          case TimeUnit.HOUR_24:\n            _this.setState({\n              hourText: text\n            });\n\n            break;\n\n          case TimeUnit.MINUTE:\n            _this.setState({\n              minuteText: text\n            });\n\n            break;\n\n          case TimeUnit.SECOND:\n            _this.setState({\n              secondText: text\n            });\n\n            break;\n\n          case TimeUnit.MS:\n            _this.setState({\n              millisecondText: text\n            });\n\n            break;\n        }\n      };\n    };\n\n    _this.getInputBlurHandler = function (unit) {\n      return function (e) {\n        var _a, _b;\n\n        var text = getStringValueFromInputEvent(e);\n\n        _this.updateTime(parseInt(text, 10), unit);\n\n        (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e, unit);\n      };\n    };\n\n    _this.getInputFocusHandler = function (unit) {\n      return function (e) {\n        var _a, _b;\n\n        if (_this.props.selectAllOnFocus) {\n          e.currentTarget.select();\n        }\n\n        (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e, unit);\n      };\n    };\n\n    _this.getInputKeyDownHandler = function (unit) {\n      return function (e) {\n        var _a;\n\n        var _b, _c;\n\n        handleKeyEvent(e, (_a = {}, _a[Keys.ARROW_UP] = function () {\n          return _this.incrementTime(unit);\n        }, _a[Keys.ARROW_DOWN] = function () {\n          return _this.decrementTime(unit);\n        }, _a[Keys.ENTER] = function () {\n          e.currentTarget.blur();\n        }, _a));\n        (_c = (_b = _this.props).onKeyDown) === null || _c === void 0 ? void 0 : _c.call(_b, e, unit);\n      };\n    };\n\n    _this.getInputKeyUpHandler = function (unit) {\n      return function (e) {\n        var _a, _b;\n\n        (_b = (_a = _this.props).onKeyUp) === null || _b === void 0 ? void 0 : _b.call(_a, e, unit);\n      };\n    };\n\n    _this.handleAmPmChange = function (e) {\n      var isNextPm = e.currentTarget.value === \"pm\";\n\n      if (isNextPm !== _this.state.isPm) {\n        var hour_1 = DateUtils.convert24HourMeridiem(_this.state.value.getHours(), isNextPm);\n\n        _this.setState({\n          isPm: isNextPm\n        }, function () {\n          return _this.updateTime(hour_1, TimeUnit.HOUR_24);\n        });\n      }\n    };\n\n    _this.incrementTime = function (unit) {\n      return _this.shiftTime(unit, 1);\n    };\n\n    _this.decrementTime = function (unit) {\n      return _this.shiftTime(unit, -1);\n    };\n\n    _this.state = _this.getFullStateFromValue(_this.getInitialValue(), props.useAmPm);\n    return _this;\n  }\n\n  TimePicker.prototype.render = function () {\n    var _a;\n\n    var shouldRenderMilliseconds = this.props.precision === TimePrecision.MILLISECOND;\n    var shouldRenderSeconds = shouldRenderMilliseconds || this.props.precision === TimePrecision.SECOND;\n    var hourUnit = this.props.useAmPm ? TimeUnit.HOUR_12 : TimeUnit.HOUR_24;\n    var classes = classNames(Classes.TIMEPICKER, this.props.className, (_a = {}, _a[CoreClasses.DISABLED] = this.props.disabled, _a));\n    return React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(\"div\", {\n      className: Classes.TIMEPICKER_ARROW_ROW\n    }, this.maybeRenderArrowButton(true, hourUnit), this.maybeRenderArrowButton(true, TimeUnit.MINUTE), shouldRenderSeconds && this.maybeRenderArrowButton(true, TimeUnit.SECOND), shouldRenderMilliseconds && this.maybeRenderArrowButton(true, TimeUnit.MS)), React.createElement(\"div\", {\n      className: Classes.TIMEPICKER_INPUT_ROW\n    }, this.renderInput(Classes.TIMEPICKER_HOUR, hourUnit, this.state.hourText), this.renderDivider(), this.renderInput(Classes.TIMEPICKER_MINUTE, TimeUnit.MINUTE, this.state.minuteText), shouldRenderSeconds && this.renderDivider(), shouldRenderSeconds && this.renderInput(Classes.TIMEPICKER_SECOND, TimeUnit.SECOND, this.state.secondText), shouldRenderMilliseconds && this.renderDivider(\".\"), shouldRenderMilliseconds && this.renderInput(Classes.TIMEPICKER_MILLISECOND, TimeUnit.MS, this.state.millisecondText)), this.maybeRenderAmPm(), React.createElement(\"div\", {\n      className: Classes.TIMEPICKER_ARROW_ROW\n    }, this.maybeRenderArrowButton(false, hourUnit), this.maybeRenderArrowButton(false, TimeUnit.MINUTE), shouldRenderSeconds && this.maybeRenderArrowButton(false, TimeUnit.SECOND), shouldRenderMilliseconds && this.maybeRenderArrowButton(false, TimeUnit.MS)));\n  };\n\n  TimePicker.prototype.componentDidUpdate = function (prevProps) {\n    var didMinTimeChange = prevProps.minTime !== this.props.minTime;\n    var didMaxTimeChange = prevProps.maxTime !== this.props.maxTime;\n    var didBoundsChange = didMinTimeChange || didMaxTimeChange;\n    var didPropValueChange = prevProps.value !== this.props.value;\n    var shouldStateUpdate = didBoundsChange || didPropValueChange;\n    var value = this.state.value;\n\n    if (this.props.value == null) {\n      value = this.getInitialValue();\n    }\n\n    if (didBoundsChange) {\n      value = DateUtils.getTimeInRange(this.state.value, this.props.minTime, this.props.maxTime);\n    }\n\n    if (this.props.value != null && !DateUtils.areSameTime(this.props.value, prevProps.value)) {\n      value = this.props.value;\n    }\n\n    if (shouldStateUpdate) {\n      this.setState(this.getFullStateFromValue(value, this.props.useAmPm));\n    }\n  }; // begin method definitions: rendering\n\n\n  TimePicker.prototype.maybeRenderArrowButton = function (isDirectionUp, timeUnit) {\n    var _this = this;\n\n    if (!this.props.showArrowButtons) {\n      return null;\n    }\n\n    var classes = classNames(Classes.TIMEPICKER_ARROW_BUTTON, getTimeUnitClassName(timeUnit));\n\n    var onClick = function () {\n      return (isDirectionUp ? _this.incrementTime : _this.decrementTime)(timeUnit);\n    }; // set tabIndex=-1 to ensure a valid FocusEvent relatedTarget when focused\n\n\n    return React.createElement(\"span\", {\n      tabIndex: -1,\n      className: classes,\n      onClick: onClick\n    }, React.createElement(Icon, {\n      icon: isDirectionUp ? \"chevron-up\" : \"chevron-down\",\n      title: isDirectionUp ? \"Increase\" : \"Decrease\"\n    }));\n  };\n\n  TimePicker.prototype.renderDivider = function (text) {\n    if (text === void 0) {\n      text = \":\";\n    }\n\n    return React.createElement(\"span\", {\n      className: Classes.TIMEPICKER_DIVIDER_TEXT\n    }, text);\n  };\n\n  TimePicker.prototype.renderInput = function (className, unit, value) {\n    var _a;\n\n    var isValid = isTimeUnitValid(unit, parseInt(value, 10));\n    var isHour = unit === TimeUnit.HOUR_12 || unit === TimeUnit.HOUR_24;\n    return React.createElement(\"input\", {\n      className: classNames(Classes.TIMEPICKER_INPUT, (_a = {}, _a[CoreClasses.intentClass(Intent.DANGER)] = !isValid, _a), className),\n      onBlur: this.getInputBlurHandler(unit),\n      onChange: this.getInputChangeHandler(unit),\n      onFocus: this.getInputFocusHandler(unit),\n      onKeyDown: this.getInputKeyDownHandler(unit),\n      onKeyUp: this.getInputKeyUpHandler(unit),\n      value: value,\n      disabled: this.props.disabled,\n      autoFocus: isHour && this.props.autoFocus\n    });\n  };\n\n  TimePicker.prototype.maybeRenderAmPm = function () {\n    if (!this.props.useAmPm) {\n      return null;\n    }\n\n    return React.createElement(HTMLSelect, {\n      className: Classes.TIMEPICKER_AMPM_SELECT,\n      disabled: this.props.disabled,\n      onChange: this.handleAmPmChange,\n      value: this.state.isPm ? \"pm\" : \"am\"\n    }, React.createElement(\"option\", {\n      value: \"am\"\n    }, \"AM\"), React.createElement(\"option\", {\n      value: \"pm\"\n    }, \"PM\"));\n  }; // begin method definitions: state modification\n\n  /**\n   * Generates a full ITimePickerState object with all text fields set to formatted strings based on value\n   */\n\n\n  TimePicker.prototype.getFullStateFromValue = function (value, useAmPm) {\n    var timeInRange = DateUtils.getTimeInRange(value, this.props.minTime, this.props.maxTime);\n    var hourUnit = useAmPm ? TimeUnit.HOUR_12 : TimeUnit.HOUR_24;\n    /* tslint:disable:object-literal-sort-keys */\n\n    return {\n      hourText: formatTime(timeInRange.getHours(), hourUnit),\n      minuteText: formatTime(timeInRange.getMinutes(), TimeUnit.MINUTE),\n      secondText: formatTime(timeInRange.getSeconds(), TimeUnit.SECOND),\n      millisecondText: formatTime(timeInRange.getMilliseconds(), TimeUnit.MS),\n      value: timeInRange,\n      isPm: DateUtils.getIsPmFrom24Hour(timeInRange.getHours())\n    };\n    /* tslint:enable:object-literal-sort-keys */\n  };\n\n  TimePicker.prototype.shiftTime = function (unit, amount) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    var newTime = getTimeUnit(unit, this.state.value) + amount;\n    this.updateTime(wrapTimeAtUnit(unit, newTime), unit);\n  };\n\n  TimePicker.prototype.updateTime = function (time, unit) {\n    var newValue = DateUtils.clone(this.state.value);\n\n    if (isTimeUnitValid(unit, time)) {\n      setTimeUnit(unit, time, newValue, this.state.isPm);\n\n      if (DateUtils.isTimeInRange(newValue, this.props.minTime, this.props.maxTime)) {\n        this.updateState({\n          value: newValue\n        });\n      } else {\n        this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));\n      }\n    } else {\n      this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));\n    }\n  };\n\n  TimePicker.prototype.updateState = function (state) {\n    var _a, _b;\n\n    var newState = state;\n    var hasNewValue = newState.value != null && !DateUtils.areSameTime(newState.value, this.state.value);\n\n    if (this.props.value == null) {\n      // component is uncontrolled\n      if (hasNewValue) {\n        newState = this.getFullStateFromValue(newState.value, this.props.useAmPm);\n      }\n\n      this.setState(newState);\n    } else {\n      // component is controlled, and there's a new value\n      // so set inputs' text based off of _old_ value and later fire onChange with new value\n      if (hasNewValue) {\n        this.setState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));\n      } else {\n        // no new value, this means only text has changed (from user typing)\n        // we want inputs to change, so update state with new text for the inputs\n        // but don't change actual value\n        this.setState(__assign(__assign({}, newState), {\n          value: DateUtils.clone(this.state.value)\n        }));\n      }\n    }\n\n    if (hasNewValue) {\n      (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, newState.value);\n    }\n  };\n\n  TimePicker.prototype.getInitialValue = function () {\n    var value = this.props.minTime;\n\n    if (this.props.value != null) {\n      value = this.props.value;\n    } else if (this.props.defaultValue != null) {\n      value = this.props.defaultValue;\n    }\n\n    return value;\n  };\n\n  TimePicker.defaultProps = {\n    autoFocus: false,\n    disabled: false,\n    maxTime: getDefaultMaxTime(),\n    minTime: getDefaultMinTime(),\n    precision: TimePrecision.MINUTE,\n    selectAllOnFocus: false,\n    showArrowButtons: false,\n    useAmPm: false\n  };\n  TimePicker.displayName = DISPLAYNAME_PREFIX + \".TimePicker\";\n  return TimePicker;\n}(React.Component);\n\nexport { TimePicker };\n\nfunction formatTime(time, unit) {\n  switch (unit) {\n    case TimeUnit.HOUR_24:\n      return time.toString();\n\n    case TimeUnit.HOUR_12:\n      return DateUtils.get12HourFrom24Hour(time).toString();\n\n    case TimeUnit.MINUTE:\n    case TimeUnit.SECOND:\n      return Utils.padWithZeroes(time.toString(), 2);\n\n    case TimeUnit.MS:\n      return Utils.padWithZeroes(time.toString(), 3);\n\n    default:\n      throw Error(\"Invalid TimeUnit\");\n  }\n}\n\nfunction getStringValueFromInputEvent(e) {\n  return e.target.value;\n}\n\nfunction handleKeyEvent(e, actions, preventDefault) {\n  if (preventDefault === void 0) {\n    preventDefault = true;\n  }\n\n  for (var _i = 0, _a = Object.keys(actions); _i < _a.length; _i++) {\n    var k = _a[_i];\n    var key = Number(k); // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n    // eslint-disable-next-line deprecation/deprecation\n\n    if (e.which === key) {\n      if (preventDefault) {\n        e.preventDefault();\n      }\n\n      actions[key]();\n    }\n  }\n}","map":{"version":3,"sources":["../../src/timePicker.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, DISPLAYNAME_PREFIX, HTMLSelect, Icon, Intent, Keys } from \"@blueprintjs/core\";\nimport * as Classes from \"./common/classes\";\nimport * as DateUtils from \"./common/dateUtils\";\nimport { getDefaultMaxTime, getDefaultMinTime, getTimeUnit, getTimeUnitClassName, isTimeUnitValid, setTimeUnit, TimeUnit, wrapTimeAtUnit, } from \"./common/timeUnit\";\nimport * as Utils from \"./common/utils\";\nexport var TimePrecision = {\n    MILLISECOND: \"millisecond\",\n    MINUTE: \"minute\",\n    SECOND: \"second\",\n};\nvar TimePicker = /** @class */ (function (_super) {\n    __extends(TimePicker, _super);\n    function TimePicker(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        // begin method definitions: event handlers\n        _this.getInputChangeHandler = function (unit) { return function (e) {\n            var text = getStringValueFromInputEvent(e);\n            switch (unit) {\n                case TimeUnit.HOUR_12:\n                case TimeUnit.HOUR_24:\n                    _this.setState({ hourText: text });\n                    break;\n                case TimeUnit.MINUTE:\n                    _this.setState({ minuteText: text });\n                    break;\n                case TimeUnit.SECOND:\n                    _this.setState({ secondText: text });\n                    break;\n                case TimeUnit.MS:\n                    _this.setState({ millisecondText: text });\n                    break;\n            }\n        }; };\n        _this.getInputBlurHandler = function (unit) { return function (e) {\n            var _a, _b;\n            var text = getStringValueFromInputEvent(e);\n            _this.updateTime(parseInt(text, 10), unit);\n            (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e, unit);\n        }; };\n        _this.getInputFocusHandler = function (unit) { return function (e) {\n            var _a, _b;\n            if (_this.props.selectAllOnFocus) {\n                e.currentTarget.select();\n            }\n            (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e, unit);\n        }; };\n        _this.getInputKeyDownHandler = function (unit) { return function (e) {\n            var _a;\n            var _b, _c;\n            handleKeyEvent(e, (_a = {},\n                _a[Keys.ARROW_UP] = function () { return _this.incrementTime(unit); },\n                _a[Keys.ARROW_DOWN] = function () { return _this.decrementTime(unit); },\n                _a[Keys.ENTER] = function () {\n                    e.currentTarget.blur();\n                },\n                _a));\n            (_c = (_b = _this.props).onKeyDown) === null || _c === void 0 ? void 0 : _c.call(_b, e, unit);\n        }; };\n        _this.getInputKeyUpHandler = function (unit) { return function (e) {\n            var _a, _b;\n            (_b = (_a = _this.props).onKeyUp) === null || _b === void 0 ? void 0 : _b.call(_a, e, unit);\n        }; };\n        _this.handleAmPmChange = function (e) {\n            var isNextPm = e.currentTarget.value === \"pm\";\n            if (isNextPm !== _this.state.isPm) {\n                var hour_1 = DateUtils.convert24HourMeridiem(_this.state.value.getHours(), isNextPm);\n                _this.setState({ isPm: isNextPm }, function () { return _this.updateTime(hour_1, TimeUnit.HOUR_24); });\n            }\n        };\n        _this.incrementTime = function (unit) { return _this.shiftTime(unit, 1); };\n        _this.decrementTime = function (unit) { return _this.shiftTime(unit, -1); };\n        _this.state = _this.getFullStateFromValue(_this.getInitialValue(), props.useAmPm);\n        return _this;\n    }\n    TimePicker.prototype.render = function () {\n        var _a;\n        var shouldRenderMilliseconds = this.props.precision === TimePrecision.MILLISECOND;\n        var shouldRenderSeconds = shouldRenderMilliseconds || this.props.precision === TimePrecision.SECOND;\n        var hourUnit = this.props.useAmPm ? TimeUnit.HOUR_12 : TimeUnit.HOUR_24;\n        var classes = classNames(Classes.TIMEPICKER, this.props.className, (_a = {},\n            _a[CoreClasses.DISABLED] = this.props.disabled,\n            _a));\n        return (React.createElement(\"div\", { className: classes },\n            React.createElement(\"div\", { className: Classes.TIMEPICKER_ARROW_ROW },\n                this.maybeRenderArrowButton(true, hourUnit),\n                this.maybeRenderArrowButton(true, TimeUnit.MINUTE),\n                shouldRenderSeconds && this.maybeRenderArrowButton(true, TimeUnit.SECOND),\n                shouldRenderMilliseconds && this.maybeRenderArrowButton(true, TimeUnit.MS)),\n            React.createElement(\"div\", { className: Classes.TIMEPICKER_INPUT_ROW },\n                this.renderInput(Classes.TIMEPICKER_HOUR, hourUnit, this.state.hourText),\n                this.renderDivider(),\n                this.renderInput(Classes.TIMEPICKER_MINUTE, TimeUnit.MINUTE, this.state.minuteText),\n                shouldRenderSeconds && this.renderDivider(),\n                shouldRenderSeconds &&\n                    this.renderInput(Classes.TIMEPICKER_SECOND, TimeUnit.SECOND, this.state.secondText),\n                shouldRenderMilliseconds && this.renderDivider(\".\"),\n                shouldRenderMilliseconds &&\n                    this.renderInput(Classes.TIMEPICKER_MILLISECOND, TimeUnit.MS, this.state.millisecondText)),\n            this.maybeRenderAmPm(),\n            React.createElement(\"div\", { className: Classes.TIMEPICKER_ARROW_ROW },\n                this.maybeRenderArrowButton(false, hourUnit),\n                this.maybeRenderArrowButton(false, TimeUnit.MINUTE),\n                shouldRenderSeconds && this.maybeRenderArrowButton(false, TimeUnit.SECOND),\n                shouldRenderMilliseconds && this.maybeRenderArrowButton(false, TimeUnit.MS))));\n    };\n    TimePicker.prototype.componentDidUpdate = function (prevProps) {\n        var didMinTimeChange = prevProps.minTime !== this.props.minTime;\n        var didMaxTimeChange = prevProps.maxTime !== this.props.maxTime;\n        var didBoundsChange = didMinTimeChange || didMaxTimeChange;\n        var didPropValueChange = prevProps.value !== this.props.value;\n        var shouldStateUpdate = didBoundsChange || didPropValueChange;\n        var value = this.state.value;\n        if (this.props.value == null) {\n            value = this.getInitialValue();\n        }\n        if (didBoundsChange) {\n            value = DateUtils.getTimeInRange(this.state.value, this.props.minTime, this.props.maxTime);\n        }\n        if (this.props.value != null && !DateUtils.areSameTime(this.props.value, prevProps.value)) {\n            value = this.props.value;\n        }\n        if (shouldStateUpdate) {\n            this.setState(this.getFullStateFromValue(value, this.props.useAmPm));\n        }\n    };\n    // begin method definitions: rendering\n    TimePicker.prototype.maybeRenderArrowButton = function (isDirectionUp, timeUnit) {\n        var _this = this;\n        if (!this.props.showArrowButtons) {\n            return null;\n        }\n        var classes = classNames(Classes.TIMEPICKER_ARROW_BUTTON, getTimeUnitClassName(timeUnit));\n        var onClick = function () { return (isDirectionUp ? _this.incrementTime : _this.decrementTime)(timeUnit); };\n        // set tabIndex=-1 to ensure a valid FocusEvent relatedTarget when focused\n        return (React.createElement(\"span\", { tabIndex: -1, className: classes, onClick: onClick },\n            React.createElement(Icon, { icon: isDirectionUp ? \"chevron-up\" : \"chevron-down\", title: isDirectionUp ? \"Increase\" : \"Decrease\" })));\n    };\n    TimePicker.prototype.renderDivider = function (text) {\n        if (text === void 0) { text = \":\"; }\n        return React.createElement(\"span\", { className: Classes.TIMEPICKER_DIVIDER_TEXT }, text);\n    };\n    TimePicker.prototype.renderInput = function (className, unit, value) {\n        var _a;\n        var isValid = isTimeUnitValid(unit, parseInt(value, 10));\n        var isHour = unit === TimeUnit.HOUR_12 || unit === TimeUnit.HOUR_24;\n        return (React.createElement(\"input\", { className: classNames(Classes.TIMEPICKER_INPUT, (_a = {}, _a[CoreClasses.intentClass(Intent.DANGER)] = !isValid, _a), className), onBlur: this.getInputBlurHandler(unit), onChange: this.getInputChangeHandler(unit), onFocus: this.getInputFocusHandler(unit), onKeyDown: this.getInputKeyDownHandler(unit), onKeyUp: this.getInputKeyUpHandler(unit), value: value, disabled: this.props.disabled, autoFocus: isHour && this.props.autoFocus }));\n    };\n    TimePicker.prototype.maybeRenderAmPm = function () {\n        if (!this.props.useAmPm) {\n            return null;\n        }\n        return (React.createElement(HTMLSelect, { className: Classes.TIMEPICKER_AMPM_SELECT, disabled: this.props.disabled, onChange: this.handleAmPmChange, value: this.state.isPm ? \"pm\" : \"am\" },\n            React.createElement(\"option\", { value: \"am\" }, \"AM\"),\n            React.createElement(\"option\", { value: \"pm\" }, \"PM\")));\n    };\n    // begin method definitions: state modification\n    /**\n     * Generates a full ITimePickerState object with all text fields set to formatted strings based on value\n     */\n    TimePicker.prototype.getFullStateFromValue = function (value, useAmPm) {\n        var timeInRange = DateUtils.getTimeInRange(value, this.props.minTime, this.props.maxTime);\n        var hourUnit = useAmPm ? TimeUnit.HOUR_12 : TimeUnit.HOUR_24;\n        /* tslint:disable:object-literal-sort-keys */\n        return {\n            hourText: formatTime(timeInRange.getHours(), hourUnit),\n            minuteText: formatTime(timeInRange.getMinutes(), TimeUnit.MINUTE),\n            secondText: formatTime(timeInRange.getSeconds(), TimeUnit.SECOND),\n            millisecondText: formatTime(timeInRange.getMilliseconds(), TimeUnit.MS),\n            value: timeInRange,\n            isPm: DateUtils.getIsPmFrom24Hour(timeInRange.getHours()),\n        };\n        /* tslint:enable:object-literal-sort-keys */\n    };\n    TimePicker.prototype.shiftTime = function (unit, amount) {\n        if (this.props.disabled) {\n            return;\n        }\n        var newTime = getTimeUnit(unit, this.state.value) + amount;\n        this.updateTime(wrapTimeAtUnit(unit, newTime), unit);\n    };\n    TimePicker.prototype.updateTime = function (time, unit) {\n        var newValue = DateUtils.clone(this.state.value);\n        if (isTimeUnitValid(unit, time)) {\n            setTimeUnit(unit, time, newValue, this.state.isPm);\n            if (DateUtils.isTimeInRange(newValue, this.props.minTime, this.props.maxTime)) {\n                this.updateState({ value: newValue });\n            }\n            else {\n                this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));\n            }\n        }\n        else {\n            this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));\n        }\n    };\n    TimePicker.prototype.updateState = function (state) {\n        var _a, _b;\n        var newState = state;\n        var hasNewValue = newState.value != null && !DateUtils.areSameTime(newState.value, this.state.value);\n        if (this.props.value == null) {\n            // component is uncontrolled\n            if (hasNewValue) {\n                newState = this.getFullStateFromValue(newState.value, this.props.useAmPm);\n            }\n            this.setState(newState);\n        }\n        else {\n            // component is controlled, and there's a new value\n            // so set inputs' text based off of _old_ value and later fire onChange with new value\n            if (hasNewValue) {\n                this.setState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));\n            }\n            else {\n                // no new value, this means only text has changed (from user typing)\n                // we want inputs to change, so update state with new text for the inputs\n                // but don't change actual value\n                this.setState(__assign(__assign({}, newState), { value: DateUtils.clone(this.state.value) }));\n            }\n        }\n        if (hasNewValue) {\n            (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, newState.value);\n        }\n    };\n    TimePicker.prototype.getInitialValue = function () {\n        var value = this.props.minTime;\n        if (this.props.value != null) {\n            value = this.props.value;\n        }\n        else if (this.props.defaultValue != null) {\n            value = this.props.defaultValue;\n        }\n        return value;\n    };\n    TimePicker.defaultProps = {\n        autoFocus: false,\n        disabled: false,\n        maxTime: getDefaultMaxTime(),\n        minTime: getDefaultMinTime(),\n        precision: TimePrecision.MINUTE,\n        selectAllOnFocus: false,\n        showArrowButtons: false,\n        useAmPm: false,\n    };\n    TimePicker.displayName = DISPLAYNAME_PREFIX + \".TimePicker\";\n    return TimePicker;\n}(React.Component));\nexport { TimePicker };\nfunction formatTime(time, unit) {\n    switch (unit) {\n        case TimeUnit.HOUR_24:\n            return time.toString();\n        case TimeUnit.HOUR_12:\n            return DateUtils.get12HourFrom24Hour(time).toString();\n        case TimeUnit.MINUTE:\n        case TimeUnit.SECOND:\n            return Utils.padWithZeroes(time.toString(), 2);\n        case TimeUnit.MS:\n            return Utils.padWithZeroes(time.toString(), 3);\n        default:\n            throw Error(\"Invalid TimeUnit\");\n    }\n}\nfunction getStringValueFromInputEvent(e) {\n    return e.target.value;\n}\nfunction handleKeyEvent(e, actions, preventDefault) {\n    if (preventDefault === void 0) { preventDefault = true; }\n    for (var _i = 0, _a = Object.keys(actions); _i < _a.length; _i++) {\n        var k = _a[_i];\n        var key = Number(k);\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        // eslint-disable-next-line deprecation/deprecation\n        if (e.which === key) {\n            if (preventDefault) {\n                e.preventDefault();\n            }\n            actions[key]();\n        }\n    }\n}\n//# sourceMappingURL=timePicker.js.map"]},"metadata":{},"sourceType":"module"}